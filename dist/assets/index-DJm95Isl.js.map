{"version":3,"file":"index-DJm95Isl.js","sources":["../../src/scene.js","../../src/lights.js","../../src/particles.js","../../src/camera.js","../../src/textures.js","../../src/shaders/windows/vertex.glsl","../../src/shaders/windows/fragment.glsl","../../src/shaderswindows.js","../../src/shaders/tunnel/vertex.glsl","../../src/shaders/tunnel/fragment.glsl","../../src/shadersTunnel.js","../../src/shaders/poteau/vertex.glsl","../../src/shaders/poteau/fragment.glsl","../../src/shadersPoteau.js","../../src/shaders/fog/vertex.glsl","../../src/shaders/fog/fragment.glsl","../../src/smokeBox.js","../../src/shaders/indoor/vertex.glsl","../../src/shaders/indoor/fragment.glsl","../../src/shaderIndoor.js","../../src/crowd.js","../../src/script.js","../../node_modules/events/events.js","../../src/buttons.js"],"sourcesContent":["import * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\n\r\nexport function createScene(scene, textures) {\r\n    const {\r\n        floorColorTexture,\r\n        floorDisplacementTexture,\r\n        floorNormalTexture,\r\n        floorRoughnessTexture,\r\n        wallsColorTexture,\r\n        wallsNormalTexture,\r\n        wallsAOTexture,\r\n        wallsRoughnessTexture,\r\n        wallsDisplacementTexture,\r\n        floorIndoorColorTexture,\r\n        floorIndoorNormalTexture,\r\n        floorIndoorDisplacementTexture,\r\n        floorIndoorRoughnessTexture,\r\n    } = textures;\r\n\r\n    /**\r\n     * Sol\r\n     */\r\n    // Paramètres initiaux pour le sol\r\n    const floorParams = {\r\n        width: 50,\r\n        height: 104,\r\n        positionX: 0,\r\n        positionY: 0,\r\n        positionZ: 50,\r\n        displacementScale: 0.3,\r\n        displacementBias: -0.2\r\n    };\r\n\r\n    // Sol\r\n    const floor = new THREE.Mesh(\r\n        new THREE.PlaneGeometry(\r\n            floorParams.width,\r\n            floorParams.height,\r\n        ),\r\n        new THREE.MeshStandardMaterial({\r\n            alphaMap: floorRoughnessTexture,\r\n            map: floorColorTexture,\r\n            aoMap: floorRoughnessTexture,\r\n            roughnessMap: floorRoughnessTexture,\r\n            metalnessMap: floorRoughnessTexture,\r\n            normalMap: floorNormalTexture,\r\n            displacementMap: floorDisplacementTexture,\r\n            displacementScale: floorParams.displacementScale,\r\n            displacementBias: floorParams.displacementBias\r\n        })\r\n    );\r\n    floor.rotation.x = -Math.PI * 0.5;\r\n    scene.add(floor);\r\n\r\n    /**\r\n     * Maison\r\n     */\r\n    let house;\r\n\r\n    /**\r\n     * Charger le modèle wall.glb\r\n     */\r\n    const loader = new GLTFLoader();\r\n    loader.load(\r\n        './models/wall.glb',\r\n        (gltf) => {\r\n            const wallModel = gltf.scene;\r\n            wallModel.position.set(0, 0, 0);\r\n            wallModel.scale.set(1, 1, 1);\r\n\r\n            wallModel.traverse((child) => {\r\n                if (child.isMesh) {\r\n                    child.material = new THREE.MeshStandardMaterial({\r\n                        map: wallsColorTexture,\r\n                        normalMap: wallsNormalTexture,\r\n                        aoMap: wallsAOTexture,\r\n                        roughnessMap: wallsRoughnessTexture,\r\n                        displacementMap: wallsDisplacementTexture,\r\n                        displacementScale: 0.1,\r\n                        roughness: 1,\r\n                        metalness: 0.2\r\n                    });\r\n                    child.castShadow = true;\r\n                    child.receiveShadow = true;\r\n                }\r\n            });\r\n\r\n            scene.add(wallModel);\r\n            house = wallModel; // Stocker le modèle pour le retourner\r\n        },\r\n    );\r\n\r\n    const floorIndoorParams = {\r\n        width: 50,\r\n        height: 50,\r\n        positionX: 0,\r\n        positionY: -0.59, // Valeur initiale dans ton code\r\n        positionZ: -43.1,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n    };\r\n\r\n    const floorIndoor = new THREE.Mesh(\r\n        new THREE.PlaneGeometry(\r\n            floorIndoorParams.width,\r\n            floorIndoorParams.height,\r\n        ),\r\n        new THREE.MeshStandardMaterial({\r\n            alphaMap: floorIndoorRoughnessTexture,\r\n            map: floorIndoorColorTexture,\r\n            aoMap: floorRoughnessTexture,\r\n            roughnessMap: floorIndoorRoughnessTexture,\r\n            metalnessMap: floorIndoorRoughnessTexture,\r\n            normalMap: floorIndoorNormalTexture,\r\n            displacementMap: floorIndoorDisplacementTexture,\r\n            roughness: 0.5,\r\n            metalness: 0.1,\r\n        })\r\n    );\r\n    floorIndoor.rotation.x = -Math.PI * 0.5;\r\n    floorIndoor.position.set(floorIndoorParams.positionX, floorIndoorParams.positionY, floorIndoorParams.positionZ);\r\n    floorIndoor.scale.set(floorIndoorParams.scaleX, floorIndoorParams.scaleY, floorIndoorParams.scaleZ);\r\n    floorIndoor.receiveShadow = true;\r\n    scene.add(floorIndoor);\r\n\r\n    const ceilingIndoorParams = {\r\n        width: 10,\r\n        height: 10,\r\n        positionX: 0,\r\n        positionY: 3, // Valeur initiale dans ton code\r\n        positionZ: -43.1,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n    };\r\n\r\n    const ceilingIndoor = new THREE.Mesh(\r\n        new THREE.PlaneGeometry(\r\n            ceilingIndoorParams.width,\r\n            ceilingIndoorParams.height,\r\n        ),\r\n        new THREE.MeshBasicMaterial({color: '#ffffff'})\r\n    );\r\n    ceilingIndoor.position.set(ceilingIndoorParams.positionX, ceilingIndoorParams.positionY, ceilingIndoorParams.positionZ);\r\n    \r\n    /**\r\n     * Porte\r\n     */\r\n    return { floor, house, floorIndoor, ceilingIndoor };\r\n}\r\n","import * as THREE from 'three';\r\n\r\nexport function createLights(scene, house) {\r\n    /**\r\n     * Lumières statiques\r\n     */\r\n    const pointLight1 = new THREE.PointLight('#ffffff', 10);\r\n    pointLight1.position.set(0, 6, 2);\r\n    pointLight1.intensity = 20;\r\n    scene.add(pointLight1);\r\n\r\n    const pointLight1Rotation = {\r\n        x: THREE.MathUtils.radToDeg(pointLight1.rotation.x),\r\n        y: THREE.MathUtils.radToDeg(pointLight1.rotation.y),\r\n        z: THREE.MathUtils.radToDeg(pointLight1.rotation.z),\r\n    };\r\n\r\n    // Update rotation de la lumière\r\n    function updatepointLight1Rotation() {\r\n        pointLight1.rotation.x = THREE.MathUtils.degToRad(pointLight1Rotation.x);\r\n        pointLight1.rotation.y = THREE.MathUtils.degToRad(pointLight1Rotation.y);\r\n        pointLight1.rotation.z = THREE.MathUtils.degToRad(pointLight1Rotation.z);\r\n        helper.update(); // Met à jour l'helper pour refléter la nouvelle rotation\r\n    }\r\n\r\n    const ambientLight = new THREE.AmbientLight('#3f0c0c', 0.2);\r\n    scene.add(ambientLight);\r\n\r\n    const doorLight = new THREE.PointLight('#ff0000', 10);\r\n    doorLight.position.set(0, 2.2, 2.5);\r\n    scene.add(doorLight);\r\n\r\n    /**\r\n     * Lumières fantômes animées\r\n     */\r\n    const config = {\r\n        nextFlicker: 0,\r\n        baseIntensity: 10,\r\n        hauteur: 1.5,\r\n        amplitude: 1.5,\r\n        speed: 1.2\r\n    };\r\n\r\n    const light1 = new THREE.PointLight('#ff0033', 6, 20, 2);\r\n    light1.position.set(-3.5, config.hauteur, 3.5);\r\n    light1.castShadow = true;\r\n\r\n    const light2 = new THREE.PointLight('#660033', 6, 20, 2);\r\n    light2.position.set(3.5, config.hauteur, 3.5);\r\n    light2.castShadow = true;\r\n\r\n    scene.add(light1, light2);\r\n\r\n    // Ajoute une lumière dédiée pour l'intérieur\r\n    const indoorLight = new THREE.PointLight('#ff0000', 100, 100);\r\n    indoorLight.position.set(-0.3, 4.3, -38.7);\r\n    indoorLight.castShadow = true;\r\n    scene.add(indoorLight);\r\n\r\n    /**\r\n     * Animation des lumières\r\n     */\r\n    function animateLights(elapsedTime) {\r\n        // Animation verticale\r\n        light1.position.y = config.hauteur + Math.sin(elapsedTime * config.speed + 3.0) * config.amplitude;\r\n        light2.position.y = config.hauteur + Math.sin(elapsedTime * config.speed + 3.0) * config.amplitude;\r\n\r\n        // Clignotement \"bug\" de la doorLight\r\n        if (elapsedTime > config.nextFlicker) {\r\n            // Effet de clignotement rapide\r\n            doorLight.intensity = Math.random() < 0.3 ? 0.2 : config.baseIntensity * (0.3 + Math.random() * 0.7);\r\n\r\n            // Prochain clignotement dans 0.05 à 3 secondes\r\n            config.nextFlicker = elapsedTime + 0.05 + Math.random() * 1;\r\n        }\r\n    }\r\n\r\n    return {\r\n        indoorLight,\r\n        pointLight1,\r\n        doorLight,\r\n        lights: [light1, light2],\r\n        animateLights,\r\n        config\r\n    };\r\n}\r\n","import * as THREE from 'three';\r\n\r\nfunction makeCircleTexture(size = 64) {\r\n    const c = document.createElement('canvas');\r\n    c.width = c.height = size;\r\n    const ctx = c.getContext('2d');\r\n    ctx.clearRect(0, 0, size, size);\r\n    ctx.beginPath();\r\n    ctx.arc(size / 2, size / 2, size / 2, 0, Math.PI * 2);\r\n    ctx.fillStyle = 'white';\r\n    ctx.fill();\r\n    const tex = new THREE.CanvasTexture(c);\r\n    tex.needsUpdate = true;\r\n    return tex;\r\n}\r\n\r\nexport function createParticles(scene) {\r\n    const particleParams = {\r\n        count: 500,\r\n        size: 0.01,\r\n        color: 0xff2222,\r\n        globalX: 0,\r\n        globalY: 0,\r\n        globalZ: 8,\r\n        amplitudeX: 0.15,\r\n        amplitudeY: 0.25,\r\n        amplitudeZ: 0.15,\r\n        speed: 1.0,\r\n    };\r\n\r\n    // Positions\r\n    let basePositions = new Float32Array(particleParams.count * 3);\r\n    let positions = new Float32Array(particleParams.count * 3);\r\n\r\n    // Positions initiales\r\n    function generatePositions() {\r\n        basePositions = new Float32Array(particleParams.count * 3);\r\n        positions = new Float32Array(particleParams.count * 3);\r\n\r\n        for (let i = 0; i < particleParams.count; i++) {\r\n            const i3 = i * 3;\r\n            basePositions[i3 + 0] = (Math.random() - 0.5) * 10 + particleParams.globalX;\r\n            basePositions[i3 + 1] = Math.random() * 3 + 0.2 + particleParams.globalY;\r\n            basePositions[i3 + 2] = (Math.random() - 0.5) * 10 - 2 + particleParams.globalZ;\r\n\r\n            positions[i3 + 0] = basePositions[i3 + 0];\r\n            positions[i3 + 1] = basePositions[i3 + 1];\r\n            positions[i3 + 2] = basePositions[i3 + 2];\r\n        }\r\n    }\r\n\r\n    // Géométrie\r\n    const particlesGeom = new THREE.BufferGeometry();\r\n    particlesGeom.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n\r\n    // Matériel\r\n    const particleMat = new THREE.PointsMaterial({\r\n        size: particleParams.size,\r\n        map: makeCircleTexture(),\r\n        color: particleParams.color,\r\n    });\r\n\r\n    // Système de particules\r\n    const particleSystem = new THREE.Points(particlesGeom, particleMat);\r\n    scene.add(particleSystem);\r\n\r\n    /**\r\n     * Animation\r\n     */\r\n    function animateParticles(elapsedTime) {\r\n        const pos = particleSystem.geometry.attributes.position.array;\r\n\r\n        for (let i = 0; i < particleParams.count; i++) {\r\n            const i3 = i * 3;\r\n            pos[i3 + 0] = basePositions[i3 + 0] + Math.sin(elapsedTime * particleParams.speed + i) * particleParams.amplitudeX;\r\n            pos[i3 + 1] = basePositions[i3 + 1] + Math.sin(elapsedTime * particleParams.speed * 0.8 + i) * particleParams.amplitudeY;\r\n            pos[i3 + 2] = basePositions[i3 + 2] + Math.cos(elapsedTime * particleParams.speed * 1.1 + i) * particleParams.amplitudeZ;\r\n        }\r\n\r\n        particleSystem.geometry.attributes.position.needsUpdate = true;\r\n    }\r\n\r\n    // Génère les positions initiales\r\n    generatePositions();\r\n\r\n    return {\r\n        particleSystem,\r\n        animateParticles,\r\n        particleParams,\r\n    };\r\n}\r\n","import { Vector3, PerspectiveCamera, AudioListener } from 'three';\r\nimport { gsap } from 'gsap';\r\n\r\n// Fonction setupCamera\r\nexport function setupCamera(camera, scene, controls, renderer) {\r\n    // Variables d'état\r\n    let scrollEnabled = false;\r\n    let scrollProgress = 0;\r\n    let finalAnimationTriggered = false;\r\n    let isMuted = false;\r\n\r\n    // Points de la trajectoire\r\n    const camStart = new Vector3(0, 1, 8);\r\n    const camEnd = new Vector3(0, 2, -39);\r\n\r\n    // Gestion du scroll\r\n    function updateScrollProgress() {\r\n        const max = document.documentElement.scrollHeight - window.innerHeight;\r\n        if (max > 0) {\r\n            scrollProgress = Math.min(window.scrollY / max, 1);\r\n        }\r\n    }\r\n    window.addEventListener('scroll', updateScrollProgress, { passive: true });\r\n\r\n    // Configuration audio avec filtre lowpass\r\n    let audioContext; // Utilise l'API native AudioContext\r\n    let audioSource;\r\n    let filter;\r\n    let gainNode;\r\n\r\n    // Bouton d'entrée et bouton de son\r\n    const overlay = document.querySelector('.overlay');\r\n    const button = document.querySelector('#enter');\r\n    const soundToggleButton = document.querySelector('#toggle-sound');\r\n    const clickaudio = new Audio('./sounds/musique.mp3'); // Utilise l'API native Audio\r\n\r\n    // Fonction pour basculer le son\r\n    function toggleSound() {\r\n        if (!audioContext) return;\r\n        isMuted = !isMuted;\r\n        if (isMuted) {\r\n            gainNode.gain.value = 0;\r\n            soundToggleButton.classList.add('muted');\r\n            // Animation GSAP pour les barres\r\n            const waves = document.querySelectorAll('.wave');\r\n            waves.forEach((wave, index) => {\r\n                gsap.to(wave, {\r\n                    height: '2px',\r\n                    duration: 0.5,\r\n                    delay: index * 0.1,\r\n                    ease: \"power2.inOut\"\r\n                });\r\n            });\r\n        } else {\r\n            gainNode.gain.value = 0.1 + (0.9 * scrollProgress);\r\n            soundToggleButton.classList.remove('muted');\r\n            // Animation GSAP pour les barres\r\n            const waves = document.querySelectorAll('.wave');\r\n            waves.forEach((wave, index) => {\r\n                gsap.to(wave, {\r\n                    height: '100%',\r\n                    duration: 0.8,\r\n                    delay: index * 0.1,\r\n                    ease: \"elastic.out(1, 0.5)\",\r\n                    onComplete: () => animateWaves(),\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // Écouteur pour le bouton de son\r\n    if (soundToggleButton) {\r\n        soundToggleButton.addEventListener('click', (e) => {\r\n            e.stopPropagation();\r\n            toggleSound();\r\n        });\r\n    }\r\n\r\n    // Animation des vagues\r\n    function animateWaves() {\r\n        if (isMuted) return;\r\n        const waves = document.querySelectorAll('.wave');\r\n        const now = Date.now();\r\n        const frequency = 0.002;\r\n        waves.forEach((wave, index) => {\r\n            const offset = index * 0.5;\r\n            const height = 5 + 15 * Math.sin(now * frequency + offset);\r\n            wave.style.height = `${height}px`;\r\n            wave.style.transform = `scaleY(${height / 20})`;\r\n        });\r\n        requestAnimationFrame(animateWaves);\r\n    }\r\n\r\n    // Écouteur pour le bouton d'entrée\r\n    button.addEventListener('click', () => {\r\n        camera.position.copy(camStart);\r\n        camera.lookAt(0, 2, 0);\r\n        scrollEnabled = true;\r\n        controls.enabled = false;\r\n\r\n        // Animation de l'overlay\r\n        overlay.style.opacity = 0;\r\n        setTimeout(() => {\r\n            overlay.style.display = 'none';\r\n            const soundToggleButton = document.querySelector('#toggle-sound');\r\n            const musicCredit = document.querySelector('.music-credit');\r\n            if (soundToggleButton) soundToggleButton.style.display = 'flex';\r\n            if (musicCredit) musicCredit.style.display = 'block';\r\n            gsap.from([soundToggleButton, musicCredit], {\r\n                opacity: 0,\r\n                y: 20,\r\n                duration: 0.5,\r\n                stagger: 0.1,\r\n                ease: \"power2.out\"\r\n            });\r\n        }, 600);\r\n\r\n        // Initialisation de l'AudioContext et du filtre\r\n        audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        audioSource = audioContext.createMediaElementSource(clickaudio);\r\n        filter = audioContext.createBiquadFilter();\r\n        gainNode = audioContext.createGain();\r\n\r\n        // Configuration du filtre\r\n        filter.type = \"lowpass\";\r\n        filter.frequency.value = 200;\r\n        filter.Q.value = 0.5;\r\n        audioSource.connect(filter);\r\n        filter.connect(gainNode);\r\n        gainNode.connect(audioContext.destination);\r\n\r\n        clickaudio.currentTime = 0;\r\n        clickaudio.play().catch(e => console.log(\"La lecture a échoué :\", e));\r\n        animateWaves();\r\n    });\r\n\r\n    // Mise à jour de la caméra et du filtre audio\r\n    function updateCamera() {\r\n        if (scrollEnabled && !finalAnimationTriggered) {\r\n            camera.position.lerpVectors(camStart, camEnd, scrollProgress);\r\n            if (!isMuted) {\r\n                gainNode.gain.value = 0.1 + (0.9 * scrollProgress);\r\n            }\r\n            if (filter) {\r\n                const minFreq = 200;\r\n                const maxFreq = 22050;\r\n                filter.frequency.value = minFreq + (maxFreq - minFreq) * scrollProgress;\r\n            }\r\n            if (scrollProgress >= 1 && !finalAnimationTriggered) {\r\n                finalAnimationTriggered = true;\r\n                scrollEnabled = false;\r\n                const timeline = gsap.timeline();\r\n                timeline.to(camera.position, {\r\n                    x: camStart.x,\r\n                    y: camStart.y,\r\n                    z: camStart.z,\r\n                    duration: 3,\r\n                    ease: \"power2.inOut\"\r\n                }, 0);\r\n                if (!isMuted) {\r\n                    timeline.to(gainNode.gain, {\r\n                        value: 0.1,\r\n                        duration: 3,\r\n                        ease: \"power2.inOut\"\r\n                    }, 0);\r\n                }\r\n                timeline.to(filter.frequency, {\r\n                    value: 200,\r\n                    duration: 3,\r\n                    ease: \"power2.inOut\",\r\n                    onComplete: () => {\r\n                        window.scrollTo({ top: 0, behavior: 'instant' });\r\n                        scrollProgress = 0;\r\n                        finalAnimationTriggered = false;\r\n                        scrollEnabled = true;\r\n                        controls.enabled = false;\r\n                    }\r\n                }, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        scrollEnabled: () => scrollEnabled,\r\n        finalAnimationTriggered: () => finalAnimationTriggered,\r\n        camStart,\r\n        camEnd,\r\n        updateCamera,\r\n    };\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport function loadTextures() {\r\n    const textureLoader = new THREE.TextureLoader()\r\n    \r\n    /**\r\n     * Floor\r\n     */\r\n    const floorColorTexture = textureLoader.load('./textures/floor/forest_ground_04_diff_4k.jpg')\r\n    const floorDisplacementTexture = textureLoader.load('./textures/floor/forest_ground_04_disp_4k.png')\r\n    const floorNormalTexture = textureLoader.load('./textures/floor/forest_ground_04_nor_dx_4k.jpg')\r\n    const floorRoughnessTexture = textureLoader.load('./textures/floor/forest_ground_04_rough_4k.jpg')\r\n    \r\n    // Configuration des textures\r\n    floorColorTexture.colorSpace = THREE.SRGBColorSpace\r\n    \r\n    // Répétition\r\n    floorColorTexture.repeat.set(8, 8)\r\n    floorNormalTexture.repeat.set(8, 8)\r\n    floorDisplacementTexture.repeat.set(8, 8)\r\n    floorRoughnessTexture.repeat.set(8, 8)\r\n    \r\n    // Wrap mode\r\n    floorColorTexture.wrapS = floorColorTexture.wrapT = THREE.RepeatWrapping\r\n    floorNormalTexture.wrapS = floorNormalTexture.wrapT = THREE.RepeatWrapping\r\n    floorDisplacementTexture.wrapS = floorDisplacementTexture.wrapT = THREE.RepeatWrapping\r\n    floorRoughnessTexture.wrapS = floorRoughnessTexture.wrapT = THREE.RepeatWrapping\r\n\r\n    /**\r\n     * Walls\r\n     */\r\n    const wallsColorTexture = textureLoader.load('./textures/walls/stone_brick_wall_001_diff_4k.jpg')\r\n    const wallsDisplacementTexture = textureLoader.load('./textures/walls/stone_brick_wall_001_disp_4k.png')\r\n    const wallsNormalTexture = textureLoader.load('./textures/walls/stone_brick_wall_001_nor_dx_4k.jpg')\r\n    const wallsAOTexture = textureLoader.load('./textures/walls/stone_brick_wall_001_ao_4k.jpg')\r\n    const wallsRoughnessTexture = textureLoader.load('./textures/walls/stone_brick_wall_001_rough_4k.jpg')\r\n\r\n    // Configuration des textures\r\n    wallsColorTexture.colorSpace = THREE.SRGBColorSpace\r\n    \r\n    // Répétition\r\n    wallsColorTexture.repeat.set(8, 8)\r\n    wallsNormalTexture.repeat.set(8, 8)\r\n    wallsDisplacementTexture.repeat.set(8, 8)\r\n    wallsRoughnessTexture.repeat.set(8, 8)\r\n    wallsAOTexture.repeat.set(8, 8)\r\n    \r\n    // Wrap mode\r\n    wallsColorTexture.wrapS = wallsColorTexture.wrapT = THREE.RepeatWrapping;\r\n    wallsNormalTexture.wrapS = wallsNormalTexture.wrapT = THREE.RepeatWrapping;\r\n    wallsDisplacementTexture.wrapS = wallsDisplacementTexture.wrapT = THREE.RepeatWrapping;\r\n    wallsRoughnessTexture.wrapS = wallsRoughnessTexture.wrapT = THREE.RepeatWrapping;\r\n    wallsAOTexture.wrapS = wallsAOTexture.wrapT = THREE.RepeatWrapping;\r\n    \r\n    /**\r\n     * Floor Indoor\r\n     */\r\n    const floorIndoorColorTexture = textureLoader.load('./textures/indoorfloor/floor_tiles_06_diff_4k.jpg')\r\n    const floorIndoorDisplacementTexture = textureLoader.load('./textures/indoorfloor/floor_tiles_06_disp_4k.jpg')\r\n    const floorIndoorNormalTexture = textureLoader.load('./textures/indoorfloor/floor_tiles_06_nor_dx_4k.jpg')\r\n    const floorIndoorAOTexture = textureLoader.load('./textures/indoorfloor/floor_tiles_06_ao_4k.jpg')\r\n    const floorIndoorRoughnessTexture = textureLoader.load('./textures/indoorfloor/floor_tiles_06_rough_4k.jpg')\r\n\r\n    // Configuration des textures\r\n    wallsColorTexture.colorSpace = THREE.SRGBColorSpace\r\n    \r\n    // Répétition\r\n    floorIndoorColorTexture.repeat.set(32, 32)\r\n    floorIndoorNormalTexture.repeat.set(32, 32)\r\n    floorIndoorDisplacementTexture.repeat.set(32, 32)\r\n    floorIndoorRoughnessTexture.repeat.set(32, 32)\r\n    floorIndoorAOTexture.repeat.set(32, 32)\r\n    \r\n    // Wrap mode\r\n    floorIndoorColorTexture.wrapS = floorIndoorColorTexture.wrapT = THREE.RepeatWrapping;\r\n    floorIndoorNormalTexture.wrapS = floorIndoorNormalTexture.wrapT = THREE.RepeatWrapping;\r\n    floorIndoorDisplacementTexture.wrapS = floorIndoorDisplacementTexture.wrapT = THREE.RepeatWrapping;\r\n    floorIndoorRoughnessTexture.wrapS = floorIndoorRoughnessTexture.wrapT = THREE.RepeatWrapping;\r\n    floorIndoorAOTexture.wrapS = floorIndoorAOTexture.wrapT = THREE.RepeatWrapping;\r\n\r\n    return {\r\n        floorColorTexture,\r\n        floorDisplacementTexture,\r\n        floorNormalTexture,\r\n        floorRoughnessTexture,\r\n        wallsColorTexture,\r\n        wallsNormalTexture,\r\n        wallsDisplacementTexture,\r\n        wallsRoughnessTexture,\r\n        wallsAOTexture,\r\n        floorIndoorColorTexture,\r\n        floorIndoorNormalTexture,\r\n        floorIndoorDisplacementTexture,\r\n        floorIndoorRoughnessTexture,\r\n        floorIndoorAOTexture,\r\n    }\r\n}","varying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}\r\n","precision mediump float;\r\nuniform float uTime;\r\n\r\nvoid main() {\r\n    float bpm = 202.0;\r\n    float period = 60.0 / bpm; // Période en secondes pour un battement\r\n    float phase = mod(uTime, period); // Temps écoulé dans le cycle actuel\r\n \r\n    float fadeDuration = 0.2;\r\n\r\n    float isRed = 1.0 - smoothstep(0.0, fadeDuration, phase);\r\n\r\n    vec3 color = vec3(1.0, 0.0, 0.0) * isRed;\r\n\r\n    gl_FragColor = vec4(color, 1.0);\r\n}\r\n","import * as THREE from 'three';\r\nimport VertexShader from './shaders/windows/vertex.glsl'\r\nimport FragmentShader from './shaders/windows/fragment.glsl'\r\n\r\nexport function createShaderPlane(scene) {\r\n    \r\n    const material = new THREE.ShaderMaterial({\r\n        vertexShader: VertexShader,\r\n        fragmentShader: FragmentShader,\r\n        uniforms: {\r\n            uTime: { value: 0 },\r\n        },\r\n    });\r\n    \r\n    const planeParams = {\r\n        positionX: 0,\r\n        positionY: 6.7,\r\n        positionZ: 0,\r\n        rotateX: 0, \r\n        scaleX: 3.6,\r\n        scaleY: 0.9,\r\n        scaleZ: 1.7,\r\n    };\r\n    \r\n    const planeGeometry = new THREE.PlaneGeometry(5, 5, 10, 10);\r\n    const shaderPlane = new THREE.Mesh(planeGeometry, material);\r\n    shaderPlane.position.set(planeParams.positionX, planeParams.positionY, planeParams.positionZ);\r\n    shaderPlane.scale.set(planeParams.scaleX, planeParams.scaleY, planeParams.scaleZ);\r\n\r\n    shaderPlane.rotation.x = planeParams.rotateX;\r\n\r\n    scene.add(shaderPlane);\r\n\r\n    return { shaderPlane, material };\r\n}\r\n","varying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\r\n}\r\n","precision mediump float;\r\nvarying vec2 vUv;\r\nuniform float uTime;\r\n\r\nvoid main() {\r\n    // Animer la position des traits avec uTime\r\n    float movingUv = vUv.x + uTime * 0.05;\r\n    \r\n    // Créer des traits verticaux animés\r\n    float strength = mod(movingUv * 10.0, 1.0);\r\n    strength = step(0.8, strength);\r\n\r\n    // Colorer les traits en rouge (R=1.0, G=0.0, B=0.0)\r\n    gl_FragColor = vec4(strength, 0.0, 0.0, 1.0);\r\n}\r\n","import * as THREE from 'three';\r\nimport VertexShader from './shaders/tunnel/vertex.glsl';\r\nimport FragmentShader from './shaders/tunnel/fragment.glsl';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\n\r\n/**\r\n * Crée et configure le tunnel avec un shader personnalisé \r\n */\r\nexport function createShaderTunnel(scene) {\r\n    const shaderMaterial = new THREE.ShaderMaterial({\r\n        vertexShader: VertexShader,\r\n        fragmentShader: FragmentShader,\r\n        uniforms: {\r\n            uTime: { value: 0 },\r\n        },\r\n        side: THREE.DoubleSide,\r\n    });\r\n\r\n    const loader = new GLTFLoader();\r\n    let tunnelModel;\r\n\r\n    loader.load(\r\n        './models/tunnel.glb',\r\n        (gltf) => {\r\n            tunnelModel = gltf.scene;\r\n\r\n            tunnelModel.traverse((child) => {\r\n                if (child.isMesh) {\r\n                    child.material = shaderMaterial;\r\n                }\r\n            });\r\n\r\n            scene.add(tunnelModel);\r\n        },\r\n    );\r\n\r\n    return { tunnelModel, shaderMaterial };\r\n}\r\n","varying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\r\n}","precision mediump float;\r\nvarying vec2 vUv;\r\nuniform float uTime;\r\n\r\nvoid main() {\r\n    // Animer la position des traits avec uTime\r\n    float movingUv = vUv.y - uTime * 0.1; \r\n\r\n    // Créer des traits horizontaux animés\r\n    float pattern = mod(movingUv * 10.0, 1.0); // Ajuste la densité des traits avec 10.0\r\n    float strength = step(0.9, pattern); // Ajuste l'épaisseur des traits avec 0.9\r\n\r\n    // Colorer les traits en rouge (R=1.0, G=0.0, B=0.0)\r\n    gl_FragColor = vec4(strength, 0.0, 0.0, 1.0);\r\n}\r\n","import * as THREE from 'three';\r\nimport VertexShader from './shaders/poteau/vertex.glsl';\r\nimport FragmentShader from './shaders/poteau/fragment.glsl';\r\n\r\nexport function createShaderPoteaux(scene) {\r\n\r\n    const postsGroupParams = {\r\n        baseX: -2.7,\r\n        baseZ: -25.6,\r\n        spacing: 6.2,\r\n        width: 0.7,\r\n        height: 20,\r\n        depth: 0.7,\r\n        positionY: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n    };\r\n\r\n    const postsGroup = new THREE.Group();\r\n    scene.add(postsGroup);\r\n\r\n    function createPosts() {\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 4; j++) {\r\n                \r\n                const postX = postsGroupParams.baseX + (i - 1) * postsGroupParams.spacing;\r\n                const postZ = postsGroupParams.baseZ + (j - 1) * postsGroupParams.spacing;\r\n\r\n                const postGeometry = new THREE.BoxGeometry(\r\n                    postsGroupParams.width,\r\n                    postsGroupParams.height,\r\n                    postsGroupParams.depth,\r\n                );\r\n\r\n                const postMaterial = new THREE.ShaderMaterial({\r\n                    vertexShader: VertexShader,\r\n                    fragmentShader: FragmentShader,\r\n                    uniforms: {\r\n                        uTime: { value: 0 },\r\n                    },\r\n                });\r\n\r\n                const post = new THREE.Mesh(postGeometry, postMaterial);\r\n\r\n                post.position.set(postX, postsGroupParams.positionY, postZ);\r\n                post.scale.set(postsGroupParams.scaleX, postsGroupParams.scaleY, postsGroupParams.scaleZ);\r\n\r\n                postsGroup.add(post);\r\n            }\r\n        }\r\n    }\r\n\r\n    createPosts();\r\n\r\n    return { postsGroup, postsGroupParams };\r\n}","varying vec2 vUv;\r\nvarying vec3 vPosition;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    vPosition = position;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}","uniform float time;\r\nuniform vec3 color;\r\nuniform float density;\r\nuniform float speed;\r\nuniform vec2 resolution;\r\nvarying vec2 vUv;\r\nvarying vec3 vPosition;\r\n\r\n// Fonction de bruit 2D\r\nfloat rand(vec2 n) {\r\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 p) {\r\n    vec2 ip = floor(p);\r\n    vec2 u = fract(p);\r\n    u = u * u * (3.0 - 2.0 * u);\r\n\r\n    float res = mix(\r\n        mix(rand(ip), rand(ip + vec2(1.0, 0.0)), u.x),\r\n        mix(rand(ip + vec2(0.0, 1.0)), rand(ip + vec2(1.0, 1.0)), u.x),\r\n        u.y);\r\n\r\n    return res * res;\r\n}\r\n\r\n// Fractional Brownian Motion 2D\r\nfloat fbm(vec2 x) {\r\n    float v = 0.0;\r\n    float a = 0.5;\r\n    vec2 shift = vec2(100.0);\r\n\r\n    for (int i = 0; i < 4; ++i) {\r\n        v += a * noise(x);\r\n        x = x * 2.0 + shift;\r\n        a *= 0.5;\r\n    }\r\n\r\n    return v;\r\n}\r\n\r\nvoid main() {\r\n    // Coordonnées UV ajustées pour le bruit\r\n    vec2 uv = vUv * 2.0 - 1.0;\r\n    uv.x *= resolution.x / resolution.y;\r\n\r\n    // Ajoute du temps pour animer la fumée\r\n    uv.y += time * speed;\r\n\r\n    // Génère du bruit 2D\r\n    float f = fbm(uv * 4.0);\r\n\r\n    // Crée un effet de fumée avec une densité variable\r\n    float smokeIntensity = smoothstep(0.2, 0.8, f) * density;\r\n\r\n    // Utilise directement la couleur blanche avec une intensité variable\r\n    vec3 smoke = mix(vec3(0.0), color, smokeIntensity);\r\n\r\n    // Réduit l'opacité aux bords du plan\r\n    float dist = length(uv);\r\n    smoke *= 1.0 - smoothstep(0.5, 1.5, dist);\r\n\r\n    // Applique une opacité variable\r\n    float alpha = smoothstep(0.2, 0.8, f) * 0.8;\r\n\r\n    gl_FragColor = vec4(smoke, alpha);\r\n}","import * as THREE from 'three';\r\nimport VertexShader from './shaders/fog/vertex.glsl';\r\nimport FragmentShader from './shaders/fog/fragment.glsl';\r\n\r\nexport function createSmokePlane(scene) {\r\n    const smokeParams = {\r\n        position: { x: 0, y: 0.3, z: -27.3 },\r\n        scale: { x: 1, y: 1 },\r\n        density: 0.1,\r\n        color: 0x000000,\r\n        speed: 0.1,\r\n    };\r\n\r\n    const planeGeometry = new THREE.PlaneGeometry(20, 20, 32, 32);\r\n    const smokeMaterial = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            time: { value: 0 },\r\n            color: { value: new THREE.Color(smokeParams.color) },\r\n            density: { value: smokeParams.density },\r\n            speed: { value: smokeParams.speed },\r\n            resolution: { value: new THREE.Vector2(1, 1) },\r\n        },\r\n        vertexShader: VertexShader,\r\n        fragmentShader: FragmentShader,\r\n        transparent: true,\r\n        side: THREE.DoubleSide,\r\n        depthWrite: false,\r\n    });\r\n\r\n    const smokePlane = new THREE.Mesh(planeGeometry, smokeMaterial);\r\n    smokePlane.position.set(smokeParams.position.x, smokeParams.position.y, smokeParams.position.z);\r\n    smokePlane.scale.set(smokeParams.scale.x, smokeParams.scale.y, 1);\r\n    smokePlane.rotation.x = -Math.PI / 2;\r\n    scene.add(smokePlane);\r\n\r\n    return { smokePlane, smokeMaterial };\r\n}\r\n","varying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}\r\n","precision mediump float;\r\nuniform float uTime;\r\n\r\nvoid main() {\r\n    float bpm = 130.0;\r\n    float period = 60.0 / bpm; // Période en secondes pour un battement\r\n    float phase = mod(uTime, period); // Temps écoulé dans le cycle actuel\r\n \r\n    float fadeDuration = 0.2;\r\n\r\n    float isRed = 1.0 - smoothstep(0.0, fadeDuration, phase);\r\n\r\n    vec3 color = vec3(1.0, 0.0, 0.0) * isRed;\r\n\r\n    gl_FragColor = vec4(color, 1.0);\r\n}\r\n","import * as THREE from 'three';\r\nimport VertexShader from './shaders/indoor/vertex.glsl'\r\nimport FragmentShader from './shaders/indoor/fragment.glsl'\r\n\r\nexport function createShaderIndoor(scene) {\r\n    \r\n    const materialIndoor = new THREE.ShaderMaterial({\r\n        vertexShader: VertexShader,\r\n        fragmentShader: FragmentShader,\r\n        uniforms: {\r\n            uTime: { value: 0 },\r\n        },\r\n    });\r\n    \r\n    const planeParams = {\r\n        positionX: 0,\r\n        positionY: 8.5,\r\n        positionZ: -40,\r\n        rotateX: 0, \r\n        scaleX: 10.2,\r\n        scaleY: 11.7,\r\n        scaleZ: 1.7,\r\n    };\r\n    \r\n    const planeGeometry = new THREE.PlaneGeometry(10, 10, 10, 10);\r\n    const shaderIndoor = new THREE.Mesh(planeGeometry, materialIndoor);\r\n    shaderIndoor.position.set(planeParams.positionX, planeParams.positionY, planeParams.positionZ);\r\n    shaderIndoor.scale.set(planeParams.scaleX, planeParams.scaleY, planeParams.scaleZ);\r\n\r\n    shaderIndoor.rotation.x = planeParams.rotateX;\r\n\r\n    scene.add(shaderIndoor);\r\n\r\n    return { shaderIndoor, materialIndoor };\r\n}\r\n","import * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\n\r\n// Variables globales\r\nlet crowd;\r\nlet characterModel;\r\nlet scene;\r\nlet clock = new THREE.Clock(); // Horloge pour l'animation\r\nlet crowdParams = {\r\n  size: 1000,\r\n  position: { x: 1.6, y: 0.1, z: -18 },\r\n  scale: { x: 0.5, y: 0.5, z: 0.5 },\r\n  spread: 50,\r\n  regenerate: () => regenerateCrowd(),\r\n};\r\n\r\n// Fonction pour animer la foule\r\nexport function updateCrowd() {\r\n  if (!crowd) return;\r\n  const elapsedTime = clock.getElapsedTime();\r\n  const dummy = new THREE.Object3D();\r\n  for (let i = 0; i < crowdParams.size; i++) {\r\n    crowd.getMatrixAt(i, dummy.matrix);\r\n    dummy.matrix.decompose(dummy.position, dummy.quaternion, dummy.scale);\r\n    // Animation de sautillement\r\n    dummy.position.y = crowdParams.position.y + 0.5 + Math.sin(elapsedTime * 4 + i) * 0.1;\r\n    dummy.updateMatrix();\r\n    crowd.setMatrixAt(i, dummy.matrix);\r\n  }\r\n  crowd.instanceMatrix.needsUpdate = true;\r\n}\r\n\r\n// Fonction d'initialisation\r\nexport function initCrowd(externalScene) {\r\n  scene = externalScene;\r\n  loadCharacterModel();\r\n}\r\n\r\n// Charger le modèle GLTF (sans animations)\r\nfunction loadCharacterModel() {\r\n  const loader = new GLTFLoader();\r\n  loader.load(\r\n    './models/bonhomme.glb',\r\n    (gltf) => {\r\n      characterModel = gltf.scene.children[0];\r\n      createCrowd();\r\n    },\r\n    undefined,\r\n    (error) => console.error('Erreur de chargement du modèle :', error)\r\n  );\r\n}\r\n\r\nfunction createBlackMaterial() {\r\n  return new THREE.MeshBasicMaterial({\r\n    color: 0x000000,\r\n  });\r\n}\r\n\r\nfunction createCrowd() {\r\n  if (crowd) scene.remove(crowd);\r\n  const modelClone = characterModel.clone();\r\n  const crowdGeometry = modelClone.geometry;\r\n  const blackMaterial = createBlackMaterial();\r\n  crowd = new THREE.InstancedMesh(crowdGeometry, blackMaterial, crowdParams.size);\r\n  const dummy = new THREE.Object3D();\r\n  for (let i = 0; i < crowdParams.size; i++) {\r\n    dummy.position.set(\r\n      (Math.random() - 0.5) * crowdParams.spread + crowdParams.position.x,\r\n      crowdParams.position.y,\r\n      (Math.random() - 0.5) * crowdParams.spread + crowdParams.position.z\r\n    );\r\n    dummy.rotation.y = Math.random() * Math.PI * 2;\r\n    dummy.scale.set(crowdParams.scale.x, crowdParams.scale.y, crowdParams.scale.z);\r\n    dummy.updateMatrix();\r\n    crowd.setMatrixAt(i, dummy.matrix);\r\n  }\r\n  crowd.scale.set(crowdParams.scale.x, crowdParams.scale.y, crowdParams.scale.z);\r\n  crowd.position.set(crowdParams.position.x, crowdParams.position.y, crowdParams.position.z);\r\n  scene.add(crowd);\r\n}\r\n\r\nfunction regenerateCrowd() {\r\n  createCrowd();\r\n}\r\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { gsap } from 'gsap';\nimport { SplitText } from 'gsap/SplitText'\nimport { createScene } from './scene.js';\nimport { createLights } from './lights.js';\nimport { createParticles } from './particles.js';\nimport { setupCamera } from './camera.js';\nimport { loadTextures } from './textures.js';\nimport { createShaderPlane } from './shaderswindows.js';\nimport { createShaderTunnel } from './shadersTunnel.js';\nimport { createShaderPoteaux } from './shadersPoteau.js';\nimport { createSmokePlane  } from './smokeBox.js';\nimport { createShaderIndoor } from './shaderIndoor.js';\nimport { initCrowd, updateCrowd } from './crowd.js';\n\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\nimport { EffectComposer } from 'three/addons/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/addons/postprocessing/RenderPass.js';\nimport { RGBShiftShader } from 'three/examples/jsm/Addons.js';\n\n\ngsap.registerPlugin(SplitText);\n\n/**\n * Animation Text\n */\ndocument.addEventListener('DOMContentLoaded', () => {\n    document.fonts.ready.then(() => {\n        let split = SplitText.create(\".text\", {\n            type: \"chars\"\n        });\n\n        gsap.from(split.chars, {\n            y: 100,\n            autoAlpha: 0,\n            stagger: 0.1,\n            opacity: 1\n        });\n    });\n});\n\n/**\n * Base\n */\nconst canvas = document.querySelector('canvas.webgl');\nconst scene = new THREE.Scene();\n\n/**\n * Textures et objets\n */\nconst textures = loadTextures();\nconst { floor, house } = createScene(scene, textures);\n\n/**\n * Lumières\n */\nconst lights = createLights(scene, house);\n\n/**\n * Fog\n */\nscene.fog = new THREE.Fog('#000000', 10, 25);\n\n/**\n * Sizes\n */\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n};\n\n/**\n * Camera\n */\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 100);\ncamera.position.set(0, 3, 8);\nscene.add(camera);\n\n/**\n * Controls - Désactivation de la rotation libre\n */\nconst controls = new OrbitControls(camera, canvas);\ncontrols.enableDamping = true;\ncontrols.enableRotate = false;  \ncontrols.enablePan = false;      \ncontrols.enableZoom = false;     \n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({ canvas });\nrenderer.setSize(sizes.width, sizes.height);\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\nrenderer.toneMapping = THREE.ACESFilmicToneMapping;\nrenderer.toneMappingExposure = 1;\n\n\nconst composer = new EffectComposer(renderer);\ncomposer.addPass(new RenderPass(scene, camera));\n\nconst rgbShiftPass = new ShaderPass(RGBShiftShader)\ncomposer.addPass(rgbShiftPass)\n\n\n// Shadows\nfloor.receiveShadow = true;\n\n/**\n * Particules\n */\nconst particleSystem = createParticles(scene);\n\n/**\n * Setup Camera Animation\n */\nconst { updateCamera } = setupCamera(camera, scene, controls, renderer);\n\n/**\n * Shaders\n */\nconst { material } = createShaderPlane(scene);\nconst { shaderMaterial } = createShaderTunnel(scene);\nconst { postsGroup } = createShaderPoteaux(scene);\nconst { smokeMaterial } = createSmokePlane(scene);\nconst { materialIndoor } = createShaderIndoor(scene);\ninitCrowd(scene);\n\n/**\n * Resize\n */\nwindow.addEventListener('resize', () => {\n    sizes.width = window.innerWidth;\n    sizes.height = window.innerHeight;\n\n    camera.aspect = sizes.width / sizes.height;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(sizes.width, sizes.height);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n    composer.setSize(sizes.width, sizes.height);\n});\n\n/**\n * Animation\n */\nconst clock = new THREE.Clock();\nconst tick = () => {\n    const elapsedTime = clock.getElapsedTime();\n\n    lights.animateLights(elapsedTime);\n\n    particleSystem.animateParticles(elapsedTime);\n\n    // Shaders Animation\n    material.uniforms.uTime.value += 0.01; \n    materialIndoor.uniforms.uTime.value += 0.01; \n    shaderMaterial.uniforms.uTime.value += 0.01;\n    smokeMaterial.uniforms.time.value += 0.015;\n\n    postsGroup.children.forEach(post => {\n        if (post.material && post.material.uniforms && post.material.uniforms.uTime) {\n            post.material.uniforms.uTime.value += 0.01;\n        }\n    });\n    \n    updateCrowd();\n\n    updateCamera();\n\n    if (controls.enabled) controls.update();\n\n    // renderer.render(scene, camera);\n    composer.render();\n    window.requestAnimationFrame(tick);\n};\ntick();\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","import { gsap } from 'gsap';\r\nimport { EventEmitter } from 'events';\r\n\r\n// Initialisation des audios (sans lecture automatique)\r\nconst hoveraudio = new Audio('./sounds/hoverbutton.mp3');\r\nconst clickaudio = new Audio('./sounds/clickbutton.mp3');\r\nhoveraudio.preload = 'auto';\r\nclickaudio.preload = 'auto';\r\n\r\n// Flag pour l'interaction utilisateur\r\nlet userHasInteracted = false;\r\nwindow.addEventListener('click', () => {\r\n    userHasInteracted = true;\r\n}, { once: true });\r\n\r\n// Fonctions utilitaires\r\nconst lerp = (a, b, n) => (1 - n) * a + n * b;\r\nconst getMousePos = (e) => ({ x: e.clientX, y: e.clientY });\r\nconst distance = (x1, y1, x2, y2) => Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n\r\n// Position de la souris\r\nlet mousepos = { x: 0, y: 0 };\r\nwindow.addEventListener('mousemove', (ev) => {\r\n    mousepos = getMousePos(ev);\r\n});\r\n\r\n// Classe ButtonCtrl\r\nclass ButtonCtrl extends EventEmitter {\r\n    constructor(el) {\r\n        super();\r\n        this.DOM = { el: el };\r\n        this.DOM.text = this.DOM.el.querySelector('.button__text');\r\n        this.DOM.textinner = this.DOM.el.querySelector('.button__text-inner');\r\n        this.DOM.decoTop = this.DOM.el.querySelector('.button__deco--1');\r\n        this.DOM.decoBottom = this.DOM.el.querySelector('.button__deco--2');\r\n\r\n        // Initialisation des styles animés\r\n        this.renderedStyles = {\r\n            tx: { previous: 0, current: 0, amt: 0.1 },\r\n            ty: { previous: 0, current: 0, amt: 0.1 },\r\n            tx2: { previous: 0, current: 0, amt: 0.05 },\r\n            ty2: { previous: 0, current: 0, amt: 0.05 }\r\n        };\r\n        this.state = { hover: false };\r\n\r\n        // Calcul initial de la taille et position\r\n        this.calculateSizePosition();\r\n\r\n        // Initialisation des événements\r\n        this.initEvents();\r\n\r\n        // Lancement de la boucle d'animation\r\n        requestAnimationFrame(() => this.render());\r\n    }\r\n\r\n    // Calcule la taille et la position du bouton\r\n    calculateSizePosition() {\r\n        this.rect = this.DOM.el.getBoundingClientRect();\r\n        this.distanceToTrigger = this.rect.width * 1.5;\r\n    }\r\n\r\n    // Initialise les écouteurs d'événements\r\n    initEvents() {\r\n        // Écouteur pour le redimensionnement de la fenêtre\r\n        this.onResize = () => this.calculateSizePosition();\r\n        window.addEventListener('resize', this.onResize);\r\n\r\n        // Écouteurs pour les interactions avec le bouton\r\n        this.DOM.el.addEventListener('mouseenter', () => {\r\n            if (userHasInteracted) {\r\n                hoveraudio.currentTime = 0;\r\n                hoveraudio.play().catch(e => console.log(\"Hover audio error:\", e));\r\n            }\r\n            this.enter();\r\n        });\r\n\r\n        this.DOM.el.addEventListener('mouseleave', () => {\r\n            if (userHasInteracted) {\r\n                hoveraudio.currentTime = 0;\r\n                hoveraudio.play().catch(e => console.log(\"Hover audio error:\", e));\r\n            }\r\n            this.leave();\r\n        });\r\n\r\n        this.DOM.el.addEventListener('click', () => {\r\n            if (userHasInteracted) {\r\n                clickaudio.currentTime = 0;\r\n                clickaudio.play().catch(e => console.log(\"Click audio error:\", e));\r\n            }\r\n        });\r\n    }\r\n\r\n    // Boucle d'animation\r\n    render() {\r\n        const distanceMouseButton = distance(\r\n            mousepos.x + window.scrollX,\r\n            mousepos.y + window.scrollY,\r\n            this.rect.left + this.rect.width / 2,\r\n            this.rect.top + this.rect.height / 2\r\n        );\r\n\r\n        let x = 0;\r\n        let y = 0;\r\n\r\n        if (distanceMouseButton < this.distanceToTrigger) {\r\n            if (!this.state.hover) this.enter();\r\n            x = (mousepos.x + window.scrollX - (this.rect.left + this.rect.width / 2)) * 0.3;\r\n            y = (mousepos.y + window.scrollY - (this.rect.top + this.rect.height / 2)) * 0.3;\r\n        } else if (this.state.hover) {\r\n            this.leave();\r\n        }\r\n\r\n        this.renderedStyles['tx'].current = this.renderedStyles['tx2'].current = x;\r\n        this.renderedStyles['ty'].current = this.renderedStyles['ty2'].current = y;\r\n\r\n        for (const key in this.renderedStyles) {\r\n            this.renderedStyles[key].previous = lerp(\r\n                this.renderedStyles[key].previous,\r\n                this.renderedStyles[key].current,\r\n                this.renderedStyles[key].amt\r\n            );\r\n        }\r\n\r\n        // Applique les transformations avec GSAP\r\n        gsap.set(this.DOM.decoTop, {\r\n            x: this.renderedStyles['tx'].previous,\r\n            y: this.renderedStyles['ty'].previous\r\n        });\r\n\r\n        gsap.set(this.DOM.decoBottom, {\r\n            x: this.renderedStyles['tx2'].previous,\r\n            y: this.renderedStyles['ty2'].previous\r\n        });\r\n\r\n        gsap.set(this.DOM.text, {\r\n            x: this.renderedStyles['tx'].previous * 0.5,\r\n            y: this.renderedStyles['ty'].previous * 0.5\r\n        });\r\n\r\n        requestAnimationFrame(() => this.render());\r\n    }\r\n\r\n    // Méthode appelée au survol du bouton\r\n    enter() {\r\n        this.emit('enter');\r\n        this.state.hover = true;\r\n        this.DOM.el.classList.add('button--hover');\r\n        document.body.classList.add('active');\r\n\r\n        gsap.killTweensOf(document.body);\r\n        gsap.killTweensOf(this.DOM.textinner);\r\n\r\n        gsap.timeline()\r\n            .to(document.body, 0.2, { backgroundColor: '#000' })\r\n            .to(this.DOM.textinner, 0.1, {\r\n                ease: 'Power3.easeOut',\r\n                opacity: 0,\r\n                y: '-10%'\r\n            }, 0)\r\n            .to(this.DOM.textinner, 0.2, {\r\n                ease: 'Expo.easeOut',\r\n                opacity: 1,\r\n                startAt: { y: '20%' },\r\n                y: '0%'\r\n            });\r\n    }\r\n\r\n    // Méthode appelée quand la souris quitte le bouton\r\n    leave() {\r\n        this.emit('leave');\r\n        this.state.hover = false;\r\n        this.DOM.el.classList.remove('button--hover');\r\n        document.body.classList.remove('active');\r\n\r\n        gsap.killTweensOf(document.body);\r\n        gsap.killTweensOf(this.DOM.textinner);\r\n\r\n        gsap.timeline()\r\n            .to(document.body, 0.2, { backgroundColor: '#000' })\r\n            .to(this.DOM.textinner, 0.1, {\r\n                ease: 'Power3.easeOut',\r\n                opacity: 0,\r\n                y: '10%'\r\n            }, 0)\r\n            .to(this.DOM.textinner, 0.2, {\r\n                ease: 'Expo.easeOut',\r\n                opacity: 1,\r\n                startAt: { y: '-20%' },\r\n                y: '0%'\r\n            });\r\n    }\r\n\r\n    // Nettoyage des écouteurs (optionnel)\r\n    destroy() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n}\r\n\r\n// Initialisation du bouton\r\nconst button = new ButtonCtrl(document.getElementById('enter'));\r\n"],"names":["createScene","scene","textures","floorColorTexture","floorDisplacementTexture","floorNormalTexture","floorRoughnessTexture","wallsColorTexture","wallsNormalTexture","wallsAOTexture","wallsRoughnessTexture","wallsDisplacementTexture","floorIndoorColorTexture","floorIndoorNormalTexture","floorIndoorDisplacementTexture","floorIndoorRoughnessTexture","floorParams","floor","THREE.Mesh","THREE.PlaneGeometry","THREE.MeshStandardMaterial","house","GLTFLoader","gltf","wallModel","child","floorIndoorParams","floorIndoor","ceilingIndoorParams","ceilingIndoor","THREE.MeshBasicMaterial","createLights","pointLight1","THREE.PointLight","THREE.MathUtils","ambientLight","THREE.AmbientLight","doorLight","config","light1","light2","indoorLight","animateLights","elapsedTime","makeCircleTexture","size","c","ctx","tex","THREE.CanvasTexture","createParticles","particleParams","basePositions","positions","generatePositions","i","i3","particlesGeom","THREE.BufferGeometry","THREE.BufferAttribute","particleMat","THREE.PointsMaterial","particleSystem","THREE.Points","animateParticles","pos","setupCamera","camera","controls","renderer","scrollEnabled","scrollProgress","finalAnimationTriggered","isMuted","camStart","Vector3","camEnd","updateScrollProgress","max","audioContext","audioSource","filter","gainNode","overlay","button","soundToggleButton","clickaudio","toggleSound","wave","index","gsap","animateWaves","e","waves","now","frequency","offset","height","musicCredit","updateCamera","timeline","loadTextures","textureLoader","THREE.TextureLoader","THREE.SRGBColorSpace","THREE.RepeatWrapping","floorIndoorAOTexture","vertex_default","fragment_default","createShaderPlane","material","THREE.ShaderMaterial","VertexShader","FragmentShader","planeParams","planeGeometry","shaderPlane","createShaderTunnel","shaderMaterial","THREE.DoubleSide","loader","tunnelModel","createShaderPoteaux","postsGroupParams","postsGroup","THREE.Group","createPosts","j","postX","postZ","postGeometry","THREE.BoxGeometry","postMaterial","post","createSmokePlane","smokeParams","smokeMaterial","THREE.Color","THREE.Vector2","smokePlane","createShaderIndoor","materialIndoor","shaderIndoor","crowd","characterModel","clock","THREE.Clock","crowdParams","updateCrowd","dummy","THREE.Object3D","initCrowd","externalScene","loadCharacterModel","createCrowd","error","createBlackMaterial","crowdGeometry","blackMaterial","THREE.InstancedMesh","SplitText","split","canvas","THREE.Scene","lights","THREE.Fog","sizes","THREE.PerspectiveCamera","OrbitControls","THREE.WebGLRenderer","THREE.PCFSoftShadowMap","THREE.ACESFilmicToneMapping","composer","EffectComposer","RenderPass","rgbShiftPass","ShaderPass","RGBShiftShader","tick","R","ReflectApply","target","receiver","args","ReflectOwnKeys","ProcessEmitWarning","warning","NumberIsNaN","value","EventEmitter","eventsModule","once","defaultMaxListeners","checkListener","listener","arg","n","_getMaxListeners","that","type","doError","events","er","err","handler","len","listeners","arrayClone","_addListener","prepend","m","existing","w","onceWrapper","_onceWrap","state","wrapped","list","position","originalListener","spliceOne","keys","key","_listeners","unwrap","evlistener","unwrapListeners","emitter","listenerCount","arr","copy","ret","name","resolve","reject","errorListener","resolver","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","wrapListener","hoveraudio","userHasInteracted","lerp","a","b","getMousePos","distance","x1","y1","x2","y2","mousepos","ev","ButtonCtrl","el","distanceMouseButton","x","y"],"mappings":"0mCAGO,SAASA,GAAYC,EAAOC,EAAU,CACzC,KAAM,CACF,kBAAAC,EACA,yBAAAC,EACA,mBAAAC,EACA,sBAAAC,EACA,kBAAAC,EACA,mBAAAC,EACA,eAAAC,EACA,sBAAAC,EACA,yBAAAC,EACA,wBAAAC,EACA,yBAAAC,EACA,+BAAAC,EACA,4BAAAC,CACR,EAAQb,EAMEc,EAAc,CAChB,MAAO,GACP,OAAQ,IAIR,kBAAmB,GACnB,iBAAkB,GAC1B,EAGUC,EAAQ,IAAIC,EACd,IAAIC,EACAH,EAAY,MACZA,EAAY,MACxB,EACQ,IAAII,EAA2B,CAC3B,SAAUd,EACV,IAAKH,EACL,MAAOG,EACP,aAAcA,EACd,aAAcA,EACd,UAAWD,EACX,gBAAiBD,EACjB,kBAAmBY,EAAY,kBAC/B,iBAAkBA,EAAY,gBAC1C,CAAS,CACT,EACIC,EAAM,SAAS,EAAI,CAAC,KAAK,GAAK,GAC9BhB,EAAM,IAAIgB,CAAK,EAKf,IAAII,EAKW,IAAIC,IACZ,KACH,oBACCC,GAAS,CACN,MAAMC,EAAYD,EAAK,MACvBC,EAAU,SAAS,IAAI,EAAG,EAAG,CAAC,EAC9BA,EAAU,MAAM,IAAI,EAAG,EAAG,CAAC,EAE3BA,EAAU,SAAUC,GAAU,CACtBA,EAAM,SACNA,EAAM,SAAW,IAAIL,EAA2B,CAC5C,IAAKb,EACL,UAAWC,EACX,MAAOC,EACP,aAAcC,EACd,gBAAiBC,EACjB,kBAAmB,GACnB,UAAW,EACX,UAAW,EACnC,CAAqB,EACDc,EAAM,WAAa,GACnBA,EAAM,cAAgB,GAE9B,CAAC,EAEDxB,EAAM,IAAIuB,CAAS,EACnBH,EAAQG,CACZ,CACR,EAEI,MAAME,EAAoB,CACtB,MAAO,GACP,OAAQ,GACR,UAAW,EACX,UAAW,KACX,UAAW,MACX,OAAQ,EACR,OAAQ,EACR,OAAQ,CAChB,EAEUC,EAAc,IAAIT,EACpB,IAAIC,EACAO,EAAkB,MAClBA,EAAkB,MAC9B,EACQ,IAAIN,EAA2B,CAC3B,SAAUL,EACV,IAAKH,EACL,MAAON,EACP,aAAcS,EACd,aAAcA,EACd,UAAWF,EACX,gBAAiBC,EACjB,UAAW,GACX,UAAW,EACvB,CAAS,CACT,EACIa,EAAY,SAAS,EAAI,CAAC,KAAK,GAAK,GACpCA,EAAY,SAAS,IAAID,EAAkB,UAAWA,EAAkB,UAAWA,EAAkB,SAAS,EAC9GC,EAAY,MAAM,IAAID,EAAkB,OAAQA,EAAkB,OAAQA,EAAkB,MAAM,EAClGC,EAAY,cAAgB,GAC5B1B,EAAM,IAAI0B,CAAW,EAErB,MAAMC,EAAsB,CACxB,MAAO,GACP,OAAQ,GACR,UAAW,EACX,UAAW,EACX,UAAW,KAIf,EAEMC,EAAgB,IAAIX,EACtB,IAAIC,EACAS,EAAoB,MACpBA,EAAoB,MAChC,EACQ,IAAIE,GAAwB,CAAC,MAAO,SAAS,CAAC,CACtD,EACI,OAAAD,EAAc,SAAS,IAAID,EAAoB,UAAWA,EAAoB,UAAWA,EAAoB,SAAS,EAK/G,CAAE,MAAAX,EAAO,MAAAI,EAAO,YAAAM,EAAa,cAAAE,CAAa,CACrD,CCrJO,SAASE,GAAa9B,EAAOoB,EAAO,CAIvC,MAAMW,EAAc,IAAIC,EAAiB,UAAW,EAAE,EACtDD,EAAY,SAAS,IAAI,EAAG,EAAG,CAAC,EAChCA,EAAY,UAAY,GACxB/B,EAAM,IAAI+B,CAAW,EAGdE,EAAgB,SAASF,EAAY,SAAS,CAAC,EAC/CE,EAAgB,SAASF,EAAY,SAAS,CAAC,EAC/CE,EAAgB,SAASF,EAAY,SAAS,CAAC,EAWtD,MAAMG,EAAe,IAAIC,GAAmB,UAAW,EAAG,EAC1DnC,EAAM,IAAIkC,CAAY,EAEtB,MAAME,EAAY,IAAIJ,EAAiB,UAAW,EAAE,EACpDI,EAAU,SAAS,IAAI,EAAG,IAAK,GAAG,EAClCpC,EAAM,IAAIoC,CAAS,EAKnB,MAAMC,EAAS,CACX,YAAa,EACb,cAAe,GACf,QAAS,IACT,UAAW,IACX,MAAO,GACf,EAEUC,EAAS,IAAIN,EAAiB,UAAW,EAAG,GAAI,CAAC,EACvDM,EAAO,SAAS,IAAI,KAAMD,EAAO,QAAS,GAAG,EAC7CC,EAAO,WAAa,GAEpB,MAAMC,EAAS,IAAIP,EAAiB,UAAW,EAAG,GAAI,CAAC,EACvDO,EAAO,SAAS,IAAI,IAAKF,EAAO,QAAS,GAAG,EAC5CE,EAAO,WAAa,GAEpBvC,EAAM,IAAIsC,EAAQC,CAAM,EAGxB,MAAMC,EAAc,IAAIR,EAAiB,UAAW,IAAK,GAAG,EAC5DQ,EAAY,SAAS,IAAI,IAAM,IAAK,KAAK,EACzCA,EAAY,WAAa,GACzBxC,EAAM,IAAIwC,CAAW,EAKrB,SAASC,EAAcC,EAAa,CAEhCJ,EAAO,SAAS,EAAID,EAAO,QAAU,KAAK,IAAIK,EAAcL,EAAO,MAAQ,CAAG,EAAIA,EAAO,UACzFE,EAAO,SAAS,EAAIF,EAAO,QAAU,KAAK,IAAIK,EAAcL,EAAO,MAAQ,CAAG,EAAIA,EAAO,UAGrFK,EAAcL,EAAO,cAErBD,EAAU,UAAY,KAAK,OAAM,EAAK,GAAM,GAAMC,EAAO,eAAiB,GAAM,KAAK,OAAM,EAAK,IAGhGA,EAAO,YAAcK,EAAc,IAAO,KAAK,OAAM,EAAK,EAElE,CAEA,MAAO,CACH,YAAAF,EACA,YAAAT,EACA,UAAAK,EACA,OAAQ,CAACE,EAAQC,CAAM,EACvB,cAAAE,EACA,OAAAJ,CACR,CACA,CCnFA,SAASM,GAAkBC,EAAO,GAAI,CAClC,MAAMC,EAAI,SAAS,cAAc,QAAQ,EACzCA,EAAE,MAAQA,EAAE,OAASD,EACrB,MAAME,EAAMD,EAAE,WAAW,IAAI,EAC7BC,EAAI,UAAU,EAAG,EAAGF,EAAMA,CAAI,EAC9BE,EAAI,UAAS,EACbA,EAAI,IAAIF,EAAO,EAAGA,EAAO,EAAGA,EAAO,EAAG,EAAG,KAAK,GAAK,CAAC,EACpDE,EAAI,UAAY,QAChBA,EAAI,KAAI,EACR,MAAMC,EAAM,IAAIC,GAAoBH,CAAC,EACrC,OAAAE,EAAI,YAAc,GACXA,CACX,CAEO,SAASE,GAAgBjD,EAAO,CACnC,MAAMkD,EAAiB,CACnB,MAAO,IACP,KAAM,IACN,MAAO,SACP,QAAS,EACT,QAAS,EACT,QAAS,EACT,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,MAAO,CACf,EAGI,IAAIC,EAAgB,IAAI,aAAaD,EAAe,MAAQ,CAAC,EACzDE,EAAY,IAAI,aAAaF,EAAe,MAAQ,CAAC,EAGzD,SAASG,GAAoB,CACzBF,EAAgB,IAAI,aAAaD,EAAe,MAAQ,CAAC,EACzDE,EAAY,IAAI,aAAaF,EAAe,MAAQ,CAAC,EAErD,QAASI,EAAI,EAAGA,EAAIJ,EAAe,MAAOI,IAAK,CAC3C,MAAMC,EAAKD,EAAI,EACfH,EAAcI,EAAK,CAAC,GAAK,KAAK,OAAM,EAAK,IAAO,GAAKL,EAAe,QACpEC,EAAcI,EAAK,CAAC,EAAI,KAAK,OAAM,EAAK,EAAI,GAAML,EAAe,QACjEC,EAAcI,EAAK,CAAC,GAAK,KAAK,SAAW,IAAO,GAAK,EAAIL,EAAe,QAExEE,EAAUG,EAAK,CAAC,EAAIJ,EAAcI,EAAK,CAAC,EACxCH,EAAUG,EAAK,CAAC,EAAIJ,EAAcI,EAAK,CAAC,EACxCH,EAAUG,EAAK,CAAC,EAAIJ,EAAcI,EAAK,CAAC,CAC5C,CACJ,CAGA,MAAMC,EAAgB,IAAIC,GAC1BD,EAAc,aAAa,WAAY,IAAIE,GAAsBN,EAAW,CAAC,CAAC,EAG9E,MAAMO,EAAc,IAAIC,GAAqB,CACzC,KAAMV,EAAe,KACrB,IAAKP,GAAiB,EACtB,MAAOO,EAAe,KAC9B,CAAK,EAGKW,EAAiB,IAAIC,GAAaN,EAAeG,CAAW,EAClE3D,EAAM,IAAI6D,CAAc,EAKxB,SAASE,EAAiBrB,EAAa,CACnC,MAAMsB,EAAMH,EAAe,SAAS,WAAW,SAAS,MAExD,QAASP,EAAI,EAAGA,EAAIJ,EAAe,MAAOI,IAAK,CAC3C,MAAMC,EAAKD,EAAI,EACfU,EAAIT,EAAK,CAAC,EAAIJ,EAAcI,EAAK,CAAC,EAAI,KAAK,IAAIb,EAAcQ,EAAe,MAAQI,CAAC,EAAIJ,EAAe,WACxGc,EAAIT,EAAK,CAAC,EAAIJ,EAAcI,EAAK,CAAC,EAAI,KAAK,IAAIb,EAAcQ,EAAe,MAAQ,GAAMI,CAAC,EAAIJ,EAAe,WAC9Gc,EAAIT,EAAK,CAAC,EAAIJ,EAAcI,EAAK,CAAC,EAAI,KAAK,IAAIb,EAAcQ,EAAe,MAAQ,IAAMI,CAAC,EAAIJ,EAAe,UAClH,CAEAW,EAAe,SAAS,WAAW,SAAS,YAAc,EAC9D,CAGA,OAAAR,IAEO,CACH,eAAAQ,EACA,iBAAAE,EACA,eAAAb,CACR,CACA,CCtFO,SAASe,GAAYC,EAAQlE,EAAOmE,EAAUC,EAAU,CAE3D,IAAIC,EAAgB,GAChBC,EAAiB,EACjBC,EAA0B,GAC1BC,EAAU,GAGd,MAAMC,EAAW,IAAIC,GAAQ,EAAG,EAAG,CAAC,EAC9BC,EAAS,IAAID,GAAQ,EAAG,EAAG,GAAG,EAGpC,SAASE,GAAuB,CAC5B,MAAMC,EAAM,SAAS,gBAAgB,aAAe,OAAO,YACvDA,EAAM,IACNP,EAAiB,KAAK,IAAI,OAAO,QAAUO,EAAK,CAAC,EAEzD,CACA,OAAO,iBAAiB,SAAUD,EAAsB,CAAE,QAAS,EAAI,CAAE,EAGzE,IAAIE,EACAC,EACAC,EACAC,EAGJ,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAoB,SAAS,cAAc,eAAe,EAC1DC,EAAa,IAAI,MAAM,sBAAsB,EAGnD,SAASC,GAAc,CACdR,IACLN,EAAU,CAACA,EACPA,GACAS,EAAS,KAAK,MAAQ,EACtBG,EAAkB,UAAU,IAAI,OAAO,EAEzB,SAAS,iBAAiB,OAAO,EACzC,QAAQ,CAACG,EAAMC,IAAU,CAC3BC,EAAK,GAAGF,EAAM,CACV,OAAQ,MACR,SAAU,GACV,MAAOC,EAAQ,GACf,KAAM,cAC1B,CAAiB,CACL,CAAC,IAEDP,EAAS,KAAK,MAAQ,GAAO,GAAMX,EACnCc,EAAkB,UAAU,OAAO,OAAO,EAE5B,SAAS,iBAAiB,OAAO,EACzC,QAAQ,CAACG,EAAMC,IAAU,CAC3BC,EAAK,GAAGF,EAAM,CACV,OAAQ,OACR,SAAU,GACV,MAAOC,EAAQ,GACf,KAAM,sBACN,WAAY,IAAME,EAAY,CAClD,CAAiB,CACL,CAAC,GAET,CAGIN,GACAA,EAAkB,iBAAiB,QAAUO,GAAM,CAC/CA,EAAE,gBAAe,EACjBL,GACJ,CAAC,EAIL,SAASI,GAAe,CACpB,GAAIlB,EAAS,OACb,MAAMoB,EAAQ,SAAS,iBAAiB,OAAO,EACzCC,EAAM,KAAK,MACXC,EAAY,KAClBF,EAAM,QAAQ,CAACL,EAAMC,IAAU,CAC3B,MAAMO,EAASP,EAAQ,GACjBQ,EAAS,EAAI,GAAK,KAAK,IAAIH,EAAMC,EAAYC,CAAM,EACzDR,EAAK,MAAM,OAAS,GAAGS,CAAM,KAC7BT,EAAK,MAAM,UAAY,UAAUS,EAAS,EAAE,GAChD,CAAC,EACD,sBAAsBN,CAAY,CACtC,CAGAP,EAAO,iBAAiB,QAAS,IAAM,CACnCjB,EAAO,SAAS,KAAKO,CAAQ,EAC7BP,EAAO,OAAO,EAAG,EAAG,CAAC,EACrBG,EAAgB,GAChBF,EAAS,QAAU,GAGnBe,EAAQ,MAAM,QAAU,EACxB,WAAW,IAAM,CACbA,EAAQ,MAAM,QAAU,OACxB,MAAME,EAAoB,SAAS,cAAc,eAAe,EAC1Da,EAAc,SAAS,cAAc,eAAe,EACtDb,IAAmBA,EAAkB,MAAM,QAAU,QACrDa,IAAaA,EAAY,MAAM,QAAU,SAC7CR,EAAK,KAAK,CAACL,EAAmBa,CAAW,EAAG,CACxC,QAAS,EACT,EAAG,GACH,SAAU,GACV,QAAS,GACT,KAAM,YACtB,CAAa,CACL,EAAG,GAAG,EAGNnB,EAAe,IAAK,OAAO,cAAgB,OAAO,oBAClDC,EAAcD,EAAa,yBAAyBO,CAAU,EAC9DL,EAASF,EAAa,qBACtBG,EAAWH,EAAa,aAGxBE,EAAO,KAAO,UACdA,EAAO,UAAU,MAAQ,IACzBA,EAAO,EAAE,MAAQ,GACjBD,EAAY,QAAQC,CAAM,EAC1BA,EAAO,QAAQC,CAAQ,EACvBA,EAAS,QAAQH,EAAa,WAAW,EAEzCO,EAAW,YAAc,EACzBA,EAAW,OAAO,MAAMM,GAAK,QAAQ,IAAI,wBAAyBA,CAAC,CAAC,EACpED,GACJ,CAAC,EAGD,SAASQ,GAAe,CACpB,GAAI7B,GAAiB,CAACE,IAClBL,EAAO,SAAS,YAAYO,EAAUE,EAAQL,CAAc,EACvDE,IACDS,EAAS,KAAK,MAAQ,GAAO,GAAMX,GAEnCU,IAGAA,EAAO,UAAU,MAAQ,IAAW,MAAqBV,GAEzDA,GAAkB,GAAK,CAACC,GAAyB,CACjDA,EAA0B,GAC1BF,EAAgB,GAChB,MAAM8B,EAAWV,EAAK,WACtBU,EAAS,GAAGjC,EAAO,SAAU,CACzB,EAAGO,EAAS,EACZ,EAAGA,EAAS,EACZ,EAAGA,EAAS,EACZ,SAAU,EACV,KAAM,cAC1B,EAAmB,CAAC,EACCD,GACD2B,EAAS,GAAGlB,EAAS,KAAM,CACvB,MAAO,GACP,SAAU,EACV,KAAM,cAC9B,EAAuB,CAAC,EAERkB,EAAS,GAAGnB,EAAO,UAAW,CAC1B,MAAO,IACP,SAAU,EACV,KAAM,eACN,WAAY,IAAM,CACd,OAAO,SAAS,CAAE,IAAK,EAAG,SAAU,SAAS,CAAE,EAC/CV,EAAiB,EACjBC,EAA0B,GAC1BF,EAAgB,GAChBF,EAAS,QAAU,EACvB,CACpB,EAAmB,CAAC,CACR,CAER,CAEA,MAAO,CACH,cAAe,IAAME,EACrB,wBAAyB,IAAME,EAC/B,SAAAE,EACA,OAAAE,EACA,aAAAuB,CACR,CACA,CC3LO,SAASE,IAAe,CAC3B,MAAMC,EAAgB,IAAIC,GAKpBpG,EAAoBmG,EAAc,KAAK,+CAA+C,EACtFlG,EAA2BkG,EAAc,KAAK,+CAA+C,EAC7FjG,EAAqBiG,EAAc,KAAK,iDAAiD,EACzFhG,EAAwBgG,EAAc,KAAK,gDAAgD,EAGjGnG,EAAkB,WAAaqG,EAG/BrG,EAAkB,OAAO,IAAI,EAAG,CAAC,EACjCE,EAAmB,OAAO,IAAI,EAAG,CAAC,EAClCD,EAAyB,OAAO,IAAI,EAAG,CAAC,EACxCE,EAAsB,OAAO,IAAI,EAAG,CAAC,EAGrCH,EAAkB,MAAQA,EAAkB,MAAQsG,EACpDpG,EAAmB,MAAQA,EAAmB,MAAQoG,EACtDrG,EAAyB,MAAQA,EAAyB,MAAQqG,EAClEnG,EAAsB,MAAQA,EAAsB,MAAQmG,EAK5D,MAAMlG,EAAoB+F,EAAc,KAAK,mDAAmD,EAC1F3F,EAA2B2F,EAAc,KAAK,mDAAmD,EACjG9F,EAAqB8F,EAAc,KAAK,qDAAqD,EAC7F7F,EAAiB6F,EAAc,KAAK,iDAAiD,EACrF5F,EAAwB4F,EAAc,KAAK,oDAAoD,EAGrG/F,EAAkB,WAAaiG,EAG/BjG,EAAkB,OAAO,IAAI,EAAG,CAAC,EACjCC,EAAmB,OAAO,IAAI,EAAG,CAAC,EAClCG,EAAyB,OAAO,IAAI,EAAG,CAAC,EACxCD,EAAsB,OAAO,IAAI,EAAG,CAAC,EACrCD,EAAe,OAAO,IAAI,EAAG,CAAC,EAG9BF,EAAkB,MAAQA,EAAkB,MAAQkG,EACpDjG,EAAmB,MAAQA,EAAmB,MAAQiG,EACtD9F,EAAyB,MAAQA,EAAyB,MAAQ8F,EAClE/F,EAAsB,MAAQA,EAAsB,MAAQ+F,EAC5DhG,EAAe,MAAQA,EAAe,MAAQgG,EAK9C,MAAM7F,EAA0B0F,EAAc,KAAK,mDAAmD,EAChGxF,EAAiCwF,EAAc,KAAK,mDAAmD,EACvGzF,EAA2ByF,EAAc,KAAK,qDAAqD,EACnGI,EAAuBJ,EAAc,KAAK,iDAAiD,EAC3FvF,EAA8BuF,EAAc,KAAK,oDAAoD,EAG3G,OAAA/F,EAAkB,WAAaiG,EAG/B5F,EAAwB,OAAO,IAAI,GAAI,EAAE,EACzCC,EAAyB,OAAO,IAAI,GAAI,EAAE,EAC1CC,EAA+B,OAAO,IAAI,GAAI,EAAE,EAChDC,EAA4B,OAAO,IAAI,GAAI,EAAE,EAC7C2F,EAAqB,OAAO,IAAI,GAAI,EAAE,EAGtC9F,EAAwB,MAAQA,EAAwB,MAAQ6F,EAChE5F,EAAyB,MAAQA,EAAyB,MAAQ4F,EAClE3F,EAA+B,MAAQA,EAA+B,MAAQ2F,EAC9E1F,EAA4B,MAAQA,EAA4B,MAAQ0F,EACxEC,EAAqB,MAAQA,EAAqB,MAAQD,EAEnD,CACH,kBAAAtG,EACA,yBAAAC,EACA,mBAAAC,EACA,sBAAAC,EACA,kBAAAC,EACA,mBAAAC,EACA,yBAAAG,EACA,sBAAAD,EACA,eAAAD,EACA,wBAAAG,EACA,yBAAAC,EACA,+BAAAC,EACA,4BAAAC,EACA,qBAAA2F,CACR,CACA,CChGA,IAAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCIO,SAASC,GAAkB5G,EAAO,CAErC,MAAM6G,EAAW,IAAIC,EAAqB,CACtC,aAAcC,GACd,eAAgBC,GAChB,SAAU,CACN,MAAO,CAAE,MAAO,CAAC,CAC7B,CACA,CAAK,EAEKC,EAAc,CAChB,UAAW,EACX,UAAW,IACX,UAAW,EACX,QAAS,EACT,OAAQ,IACR,OAAQ,GACR,OAAQ,GAChB,EAEUC,EAAgB,IAAIhG,EAAoB,EAAG,EAAG,GAAI,EAAE,EACpDiG,EAAc,IAAIlG,EAAWiG,EAAeL,CAAQ,EAC1D,OAAAM,EAAY,SAAS,IAAIF,EAAY,UAAWA,EAAY,UAAWA,EAAY,SAAS,EAC5FE,EAAY,MAAM,IAAIF,EAAY,OAAQA,EAAY,OAAQA,EAAY,MAAM,EAEhFE,EAAY,SAAS,EAAIF,EAAY,QAErCjH,EAAM,IAAImH,CAAW,EAEd,CAAE,YAAAA,EAAa,SAAAN,EAC1B,CClCA,IAAAH,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCQO,SAASS,GAAmBpH,EAAO,CACtC,MAAMqH,EAAiB,IAAIP,EAAqB,CAC5C,aAAcC,GACd,eAAgBC,GAChB,SAAU,CACN,MAAO,CAAE,MAAO,CAAC,CAC7B,EACQ,KAAMM,EACd,CAAK,EAEKC,EAAS,IAAIlG,EACnB,IAAImG,EAEJ,OAAAD,EAAO,KACH,sBACCjG,GAAS,CACNkG,EAAclG,EAAK,MAEnBkG,EAAY,SAAUhG,GAAU,CACxBA,EAAM,SACNA,EAAM,SAAW6F,EAEzB,CAAC,EAEDrH,EAAM,IAAIwH,CAAW,CACzB,CACR,EAEW,CAAE,YAAAA,EAAa,eAAAH,EAC1B,CCrCA,IAAAX,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCIO,SAASc,GAAoBzH,EAAO,CAEvC,MAAM0H,EAAmB,CACrB,MAAO,KACP,MAAO,MACP,QAAS,IACT,MAAO,GACP,OAAQ,GACR,MAAO,GACP,UAAW,EACX,OAAQ,EACR,OAAQ,EACR,OAAQ,CAChB,EAEUC,EAAa,IAAIC,GACvB5H,EAAM,IAAI2H,CAAU,EAEpB,SAASE,GAAc,CAEnB,QAASvE,EAAI,EAAGA,EAAI,EAAGA,IACnB,QAASwE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExB,MAAMC,EAAQL,EAAiB,OAASpE,EAAI,GAAKoE,EAAiB,QAC5DM,EAAQN,EAAiB,OAASI,EAAI,GAAKJ,EAAiB,QAE5DO,EAAe,IAAIC,GACrBR,EAAiB,MACjBA,EAAiB,OACjBA,EAAiB,KACrC,EAEsBS,EAAe,IAAIrB,EAAqB,CAC1C,aAAcC,GACd,eAAgBC,GAChB,SAAU,CACN,MAAO,CAAE,MAAO,CAAC,CACzC,CACA,CAAiB,EAEKoB,EAAO,IAAInH,EAAWgH,EAAcE,CAAY,EAEtDC,EAAK,SAAS,IAAIL,EAAOL,EAAiB,UAAWM,CAAK,EAC1DI,EAAK,MAAM,IAAIV,EAAiB,OAAQA,EAAiB,OAAQA,EAAiB,MAAM,EAExFC,EAAW,IAAIS,CAAI,CACvB,CAER,CAEA,OAAAP,IAEO,CAAE,WAAAF,EAAY,iBAAAD,EACzB,CCzDA,IAAAhB,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCIO,SAAS0B,GAAiBrI,EAAO,CACpC,MAAMsI,EAAc,CAChB,SAAU,CAAE,EAAG,EAAG,EAAG,GAAK,EAAG,KAAK,EAClC,MAAO,CAAE,EAAG,EAAG,EAAG,CAAC,EACnB,QAAS,GACT,MAAO,EACP,MAAO,EACf,EAEUpB,EAAgB,IAAIhG,EAAoB,GAAI,GAAI,GAAI,EAAE,EACtDqH,EAAgB,IAAIzB,EAAqB,CAC3C,SAAU,CACN,KAAM,CAAE,MAAO,CAAC,EAChB,MAAO,CAAE,MAAO,IAAI0B,GAAYF,EAAY,KAAK,CAAC,EAClD,QAAS,CAAE,MAAOA,EAAY,OAAO,EACrC,MAAO,CAAE,MAAOA,EAAY,KAAK,EACjC,WAAY,CAAE,MAAO,IAAIG,GAAc,EAAG,CAAC,CAAC,CACxD,EACQ,aAAc1B,GACd,eAAgBC,GAChB,YAAa,GACb,KAAMM,GACN,WAAY,EACpB,CAAK,EAEKoB,EAAa,IAAIzH,EAAWiG,EAAeqB,CAAa,EAC9D,OAAAG,EAAW,SAAS,IAAIJ,EAAY,SAAS,EAAGA,EAAY,SAAS,EAAGA,EAAY,SAAS,CAAC,EAC9FI,EAAW,MAAM,IAAIJ,EAAY,MAAM,EAAGA,EAAY,MAAM,EAAG,CAAC,EAChEI,EAAW,SAAS,EAAI,CAAC,KAAK,GAAK,EACnC1I,EAAM,IAAI0I,CAAU,EAEb,CAAE,WAAAA,EAAY,cAAAH,EACzB,CCpCA,IAAA7B,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCIO,SAASgC,GAAmB3I,EAAO,CAEtC,MAAM4I,EAAiB,IAAI9B,EAAqB,CAC5C,aAAcC,GACd,eAAgBC,GAChB,SAAU,CACN,MAAO,CAAE,MAAO,CAAC,CAC7B,CACA,CAAK,EAEKC,EAAc,CAChB,UAAW,EACX,UAAW,IACX,UAAW,IACX,QAAS,EACT,OAAQ,KACR,OAAQ,KACR,OAAQ,GAChB,EAEUC,EAAgB,IAAIhG,EAAoB,GAAI,GAAI,GAAI,EAAE,EACtD2H,EAAe,IAAI5H,EAAWiG,EAAe0B,CAAc,EACjE,OAAAC,EAAa,SAAS,IAAI5B,EAAY,UAAWA,EAAY,UAAWA,EAAY,SAAS,EAC7F4B,EAAa,MAAM,IAAI5B,EAAY,OAAQA,EAAY,OAAQA,EAAY,MAAM,EAEjF4B,EAAa,SAAS,EAAI5B,EAAY,QAEtCjH,EAAM,IAAI6I,CAAY,EAEf,CAAE,aAAAA,EAAc,eAAAD,EAC3B,CC9BA,IAAIE,EACAC,GACA/I,EACAgJ,GAAQ,IAAIC,GACZC,EAAc,CAChB,KAAM,IACN,SAAU,CAAE,EAAG,IAAK,EAAG,GAAK,EAAG,GAAG,EAClC,MAAO,CAAE,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,EAC/B,OAAQ,EAEV,EAGO,SAASC,IAAc,CAC5B,GAAI,CAACL,EAAO,OACZ,MAAMpG,EAAcsG,GAAM,iBACpBI,EAAQ,IAAIC,GAClB,QAAS,EAAI,EAAG,EAAIH,EAAY,KAAM,IACpCJ,EAAM,YAAY,EAAGM,EAAM,MAAM,EACjCA,EAAM,OAAO,UAAUA,EAAM,SAAUA,EAAM,WAAYA,EAAM,KAAK,EAEpEA,EAAM,SAAS,EAAIF,EAAY,SAAS,EAAI,GAAM,KAAK,IAAIxG,EAAc,EAAI,CAAC,EAAI,GAClF0G,EAAM,aAAY,EAClBN,EAAM,YAAY,EAAGM,EAAM,MAAM,EAEnCN,EAAM,eAAe,YAAc,EACrC,CAGO,SAASQ,GAAUC,EAAe,CACvCvJ,EAAQuJ,EACRC,IACF,CAGA,SAASA,IAAqB,CACb,IAAInI,IACZ,KACL,wBACCC,GAAS,CACRyH,GAAiBzH,EAAK,MAAM,SAAS,CAAC,EACtCmI,IACF,EACA,OACCC,GAAU,QAAQ,MAAM,mCAAoCA,CAAK,CACtE,CACA,CAEA,SAASC,IAAsB,CAC7B,OAAO,IAAI9H,GAAwB,CACjC,MAAO,CACX,CAAG,CACH,CAEA,SAAS4H,IAAc,CACjBX,GAAO9I,EAAM,OAAO8I,CAAK,EAE7B,MAAMc,EADab,GAAe,QACD,SAC3Bc,EAAgBF,KACtBb,EAAQ,IAAIgB,GAAoBF,EAAeC,EAAeX,EAAY,IAAI,EAC9E,MAAME,EAAQ,IAAIC,GAClB,QAAS/F,EAAI,EAAGA,EAAI4F,EAAY,KAAM5F,IACpC8F,EAAM,SAAS,KACZ,KAAK,OAAM,EAAK,IAAOF,EAAY,OAASA,EAAY,SAAS,EAClEA,EAAY,SAAS,GACpB,KAAK,OAAM,EAAK,IAAOA,EAAY,OAASA,EAAY,SAAS,CACxE,EACIE,EAAM,SAAS,EAAI,KAAK,OAAM,EAAK,KAAK,GAAK,EAC7CA,EAAM,MAAM,IAAIF,EAAY,MAAM,EAAGA,EAAY,MAAM,EAAGA,EAAY,MAAM,CAAC,EAC7EE,EAAM,aAAY,EAClBN,EAAM,YAAYxF,EAAG8F,EAAM,MAAM,EAEnCN,EAAM,MAAM,IAAII,EAAY,MAAM,EAAGA,EAAY,MAAM,EAAGA,EAAY,MAAM,CAAC,EAC7EJ,EAAM,SAAS,IAAII,EAAY,SAAS,EAAGA,EAAY,SAAS,EAAGA,EAAY,SAAS,CAAC,EACzFlJ,EAAM,IAAI8I,CAAK,CACjB,CCzDArD,EAAK,eAAesE,EAAS,EAK7B,SAAS,iBAAiB,mBAAoB,IAAM,CAChD,SAAS,MAAM,MAAM,KAAK,IAAM,CAC5B,IAAIC,EAAQD,GAAU,OAAO,QAAS,CAClC,KAAM,OAClB,CAAS,EAEDtE,EAAK,KAAKuE,EAAM,MAAO,CACnB,EAAG,IACH,UAAW,EACX,QAAS,GACT,QAAS,CACrB,CAAS,CACL,CAAC,CACL,CAAC,EAKD,MAAMC,GAAS,SAAS,cAAc,cAAc,EAC9CjK,EAAQ,IAAIkK,GAKZjK,GAAWmG,GAAY,EACvB,CAAE,MAAApF,EAAa,EAAIjB,GAAYC,EAAOC,EAAQ,EAK9CkK,GAASrI,GAAa9B,CAAY,EAKxCA,EAAM,IAAM,IAAIoK,GAAU,UAAW,GAAI,EAAE,EAK3C,MAAMC,EAAQ,CACV,MAAO,OAAO,WACd,OAAQ,OAAO,WACnB,EAKMnG,EAAS,IAAIoG,GAAwB,GAAID,EAAM,MAAQA,EAAM,OAAQ,GAAK,GAAG,EACnFnG,EAAO,SAAS,IAAI,EAAG,EAAG,CAAC,EAC3BlE,EAAM,IAAIkE,CAAM,EAKhB,MAAMC,EAAW,IAAIoG,GAAcrG,EAAQ+F,EAAM,EACjD9F,EAAS,cAAgB,GACzBA,EAAS,aAAe,GACxBA,EAAS,UAAY,GACrBA,EAAS,WAAa,GAKtB,MAAMC,EAAW,IAAIoG,GAAoB,CAAE,OAAAP,GAAQ,EACnD7F,EAAS,QAAQiG,EAAM,MAAOA,EAAM,MAAM,EAC1CjG,EAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,CAAC,CAAC,EAC3DA,EAAS,UAAU,QAAU,GAC7BA,EAAS,UAAU,KAAOqG,GAC1BrG,EAAS,YAAcsG,GACvBtG,EAAS,oBAAsB,EAG/B,MAAMuG,EAAW,IAAIC,GAAexG,CAAQ,EAC5CuG,EAAS,QAAQ,IAAIE,GAAW7K,EAAOkE,CAAM,CAAC,EAE9C,MAAM4G,GAAe,IAAIC,GAAWC,EAAc,EAClDL,EAAS,QAAQG,EAAY,EAI7B9J,GAAM,cAAgB,GAKtB,MAAM6C,GAAiBZ,GAAgBjD,CAAK,EAKtC,CAAE,aAAAkG,EAAY,EAAKjC,GAAYC,EAAQlE,EAAOmE,CAAkB,EAKhE,CAAE,SAAA0C,EAAQ,EAAKD,GAAkB5G,CAAK,EACtC,CAAE,eAAAqH,EAAc,EAAKD,GAAmBpH,CAAK,EAC7C,CAAE,WAAA2H,EAAU,EAAKF,GAAoBzH,CAAK,EAC1C,CAAE,cAAAuI,EAAa,EAAKF,GAAiBrI,CAAK,EAC1C,CAAE,eAAA4I,EAAc,EAAKD,GAAmB3I,CAAK,EACnDsJ,GAAUtJ,CAAK,EAKf,OAAO,iBAAiB,SAAU,IAAM,CACpCqK,EAAM,MAAQ,OAAO,WACrBA,EAAM,OAAS,OAAO,YAEtBnG,EAAO,OAASmG,EAAM,MAAQA,EAAM,OACpCnG,EAAO,uBAAsB,EAE7BE,EAAS,QAAQiG,EAAM,MAAOA,EAAM,MAAM,EAC1CjG,EAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,CAAC,CAAC,EAE3DuG,EAAS,QAAQN,EAAM,MAAOA,EAAM,MAAM,CAC9C,CAAC,EAKD,MAAMrB,GAAQ,IAAIC,GACZgC,GAAO,IAAM,CACf,MAAMvI,EAAcsG,GAAM,eAAc,EAExCmB,GAAO,cAAczH,CAAW,EAEhCmB,GAAe,iBAAiBnB,CAAW,EAG3CmE,GAAS,SAAS,MAAM,OAAS,IACjC+B,GAAe,SAAS,MAAM,OAAS,IACvCvB,GAAe,SAAS,MAAM,OAAS,IACvCkB,GAAc,SAAS,KAAK,OAAS,KAErCZ,GAAW,SAAS,QAAQS,GAAQ,CAC5BA,EAAK,UAAYA,EAAK,SAAS,UAAYA,EAAK,SAAS,SAAS,QAClEA,EAAK,SAAS,SAAS,MAAM,OAAS,IAE9C,CAAC,EAEDe,GAAW,EAEXjD,GAAY,EAER/B,EAAS,SAASA,EAAS,OAAM,EAGrCwG,EAAS,OAAM,EACf,OAAO,sBAAsBM,EAAI,CACrC,EACAA,GAAI,kEC5JJ,IAAIC,EAAI,OAAO,SAAY,SAAW,QAAU,KAC5CC,EAAeD,GAAK,OAAOA,EAAE,OAAU,WACvCA,EAAE,MACF,SAAsBE,EAAQC,EAAUC,EAAM,CAC9C,OAAO,SAAS,UAAU,MAAM,KAAKF,EAAQC,EAAUC,CAAI,CAC/D,EAEIC,EACAL,GAAK,OAAOA,EAAE,SAAY,WAC5BK,EAAiBL,EAAE,QACV,OAAO,sBAChBK,EAAiB,SAAwBH,EAAQ,CAC/C,OAAO,OAAO,oBAAoBA,CAAM,EACrC,OAAO,OAAO,sBAAsBA,CAAM,CAAC,CAClD,EAEEG,EAAiB,SAAwBH,EAAQ,CAC/C,OAAO,OAAO,oBAAoBA,CAAM,CAC5C,EAGA,SAASI,EAAmBC,EAAS,CAC/B,SAAW,QAAQ,MAAM,QAAQ,KAAKA,CAAO,CACnD,CAEA,IAAIC,EAAc,OAAO,OAAS,SAAqBC,EAAO,CAC5D,OAAOA,IAAUA,CACnB,EAEA,SAASC,GAAe,CACtBA,EAAa,KAAK,KAAK,IAAI,CAC7B,CACAC,EAAA,QAAiBD,EACjBC,EAAA,QAAA,KAAsBC,EAGtBF,EAAa,aAAeA,EAE5BA,EAAa,UAAU,QAAU,OACjCA,EAAa,UAAU,aAAe,EACtCA,EAAa,UAAU,cAAgB,OAIvC,IAAIG,EAAsB,GAE1B,SAASC,EAAcC,EAAU,CAC/B,GAAI,OAAOA,GAAa,WACtB,MAAM,IAAI,UAAU,mEAAqE,OAAOA,CAAQ,CAE5G,CAEA,OAAO,eAAeL,EAAc,sBAAuB,CACzD,WAAY,GACZ,IAAK,UAAW,CACd,OAAOG,CACX,EACE,IAAK,SAASG,EAAK,CACjB,GAAI,OAAOA,GAAQ,UAAYA,EAAM,GAAKR,EAAYQ,CAAG,EACvD,MAAM,IAAI,WAAW,kGAAoGA,EAAM,GAAG,EAEpIH,EAAsBG,CAC1B,CACA,CAAC,EAEDN,EAAa,KAAO,UAAW,EAEzB,KAAK,UAAY,QACjB,KAAK,UAAY,OAAO,eAAe,IAAI,EAAE,WAC/C,KAAK,QAAU,OAAO,OAAO,IAAI,EACjC,KAAK,aAAe,GAGtB,KAAK,cAAgB,KAAK,eAAiB,MAC7C,EAIAA,EAAa,UAAU,gBAAkB,SAAyBO,EAAG,CACnE,GAAI,OAAOA,GAAM,UAAYA,EAAI,GAAKT,EAAYS,CAAC,EACjD,MAAM,IAAI,WAAW,gFAAkFA,EAAI,GAAG,EAEhH,YAAK,cAAgBA,EACd,IACT,EAEA,SAASC,EAAiBC,EAAM,CAC9B,OAAIA,EAAK,gBAAkB,OAClBT,EAAa,oBACfS,EAAK,aACd,CAEAT,EAAa,UAAU,gBAAkB,UAA2B,CAClE,OAAOQ,EAAiB,IAAI,CAC9B,EAEAR,EAAa,UAAU,KAAO,SAAcU,EAAM,CAEhD,QADIhB,EAAO,CAAA,EACFhI,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAKgI,EAAK,KAAK,UAAUhI,CAAC,CAAC,EACjE,IAAIiJ,EAAWD,IAAS,QAEpBE,EAAS,KAAK,QAClB,GAAIA,IAAW,OACbD,EAAWA,GAAWC,EAAO,QAAU,eAChC,CAACD,EACR,MAAO,GAGT,GAAIA,EAAS,CACX,IAAIE,EAGJ,GAFInB,EAAK,OAAS,IAChBmB,EAAKnB,EAAK,CAAC,GACTmB,aAAc,MAGhB,MAAMA,EAGR,IAAIC,EAAM,IAAI,MAAM,oBAAsBD,EAAK,KAAOA,EAAG,QAAU,IAAM,GAAG,EAC5E,MAAAC,EAAI,QAAUD,EACRC,CACV,CAEE,IAAIC,EAAUH,EAAOF,CAAI,EAEzB,GAAIK,IAAY,OACd,MAAO,GAET,GAAI,OAAOA,GAAY,WACrBxB,EAAawB,EAAS,KAAMrB,CAAI,MAIhC,SAFIsB,EAAMD,EAAQ,OACdE,GAAYC,EAAWH,EAASC,CAAG,EAC9BtJ,EAAI,EAAGA,EAAIsJ,EAAK,EAAEtJ,EACzB6H,EAAa0B,GAAUvJ,CAAC,EAAG,KAAMgI,CAAI,EAGzC,MAAO,EACT,EAEA,SAASyB,EAAa3B,EAAQkB,EAAML,EAAUe,EAAS,CACrD,IAAIC,EACAT,EACAU,EAsBJ,GApBAlB,EAAcC,CAAQ,EAEtBO,EAASpB,EAAO,QACZoB,IAAW,QACbA,EAASpB,EAAO,QAAU,OAAO,OAAO,IAAI,EAC5CA,EAAO,aAAe,IAIlBoB,EAAO,cAAgB,SACzBpB,EAAO,KAAK,cAAekB,EACfL,EAAS,SAAWA,EAAS,SAAWA,CAAQ,EAI5DO,EAASpB,EAAO,SAElB8B,EAAWV,EAAOF,CAAI,GAGpBY,IAAa,OAEfA,EAAWV,EAAOF,CAAI,EAAIL,EAC1B,EAAEb,EAAO,qBAEL,OAAO8B,GAAa,WAEtBA,EAAWV,EAAOF,CAAI,EACpBU,EAAU,CAACf,EAAUiB,CAAQ,EAAI,CAACA,EAAUjB,CAAQ,EAE7Ce,EACTE,EAAS,QAAQjB,CAAQ,EAEzBiB,EAAS,KAAKjB,CAAQ,EAIxBgB,EAAIb,EAAiBhB,CAAM,EACvB6B,EAAI,GAAKC,EAAS,OAASD,GAAK,CAACC,EAAS,OAAQ,CACpDA,EAAS,OAAS,GAGlB,IAAIC,EAAI,IAAI,MAAM,+CACED,EAAS,OAAS,IAAM,OAAOZ,CAAI,EAAI,mEAEvB,EACpCa,EAAE,KAAO,8BACTA,EAAE,QAAU/B,EACZ+B,EAAE,KAAOb,EACTa,EAAE,MAAQD,EAAS,OACnB1B,EAAmB2B,CAAC,CAC1B,CAGE,OAAO/B,CACT,CAEAQ,EAAa,UAAU,YAAc,SAAqBU,EAAML,EAAU,CACxE,OAAOc,EAAa,KAAMT,EAAML,EAAU,EAAK,CACjD,EAEAL,EAAa,UAAU,GAAKA,EAAa,UAAU,YAEnDA,EAAa,UAAU,gBACnB,SAAyBU,EAAML,EAAU,CACvC,OAAOc,EAAa,KAAMT,EAAML,EAAU,EAAI,CACpD,EAEA,SAASmB,GAAc,CACrB,GAAI,CAAC,KAAK,MAGR,OAFA,KAAK,OAAO,eAAe,KAAK,KAAM,KAAK,MAAM,EACjD,KAAK,MAAQ,GACT,UAAU,SAAW,EAChB,KAAK,SAAS,KAAK,KAAK,MAAM,EAChC,KAAK,SAAS,MAAM,KAAK,OAAQ,SAAS,CAErD,CAEA,SAASC,EAAUjC,EAAQkB,EAAML,EAAU,CACzC,IAAIqB,EAAQ,CAAE,MAAO,GAAO,OAAQ,OAAW,OAAQlC,EAAQ,KAAMkB,EAAM,SAAUL,CAAQ,EACzFsB,EAAUH,EAAY,KAAKE,CAAK,EACpC,OAAAC,EAAQ,SAAWtB,EACnBqB,EAAM,OAASC,EACRA,CACT,CAEA3B,EAAa,UAAU,KAAO,SAAcU,EAAML,EAAU,CAC1D,OAAAD,EAAcC,CAAQ,EACtB,KAAK,GAAGK,EAAMe,EAAU,KAAMf,EAAML,CAAQ,CAAC,EACtC,IACT,EAEAL,EAAa,UAAU,oBACnB,SAA6BU,EAAML,EAAU,CAC3C,OAAAD,EAAcC,CAAQ,EACtB,KAAK,gBAAgBK,EAAMe,EAAU,KAAMf,EAAML,CAAQ,CAAC,EACnD,IACb,EAGAL,EAAa,UAAU,eACnB,SAAwBU,EAAML,EAAU,CACtC,IAAIuB,EAAMhB,EAAQiB,EAAUnK,EAAGoK,EAK/B,GAHA1B,EAAcC,CAAQ,EAEtBO,EAAS,KAAK,QACVA,IAAW,OACb,OAAO,KAGT,GADAgB,EAAOhB,EAAOF,CAAI,EACdkB,IAAS,OACX,OAAO,KAET,GAAIA,IAASvB,GAAYuB,EAAK,WAAavB,EACrC,EAAE,KAAK,eAAiB,EAC1B,KAAK,QAAU,OAAO,OAAO,IAAI,GAEjC,OAAOO,EAAOF,CAAI,EACdE,EAAO,gBACT,KAAK,KAAK,iBAAkBF,EAAMkB,EAAK,UAAYvB,CAAQ,WAEtD,OAAOuB,GAAS,WAAY,CAGrC,IAFAC,EAAW,GAENnK,EAAIkK,EAAK,OAAS,EAAGlK,GAAK,EAAGA,IAChC,GAAIkK,EAAKlK,CAAC,IAAM2I,GAAYuB,EAAKlK,CAAC,EAAE,WAAa2I,EAAU,CACzDyB,EAAmBF,EAAKlK,CAAC,EAAE,SAC3BmK,EAAWnK,EACX,KACZ,CAGQ,GAAImK,EAAW,EACb,OAAO,KAELA,IAAa,EACfD,EAAK,MAAK,EAEVG,EAAUH,EAAMC,CAAQ,EAGtBD,EAAK,SAAW,IAClBhB,EAAOF,CAAI,EAAIkB,EAAK,CAAC,GAEnBhB,EAAO,iBAAmB,QAC5B,KAAK,KAAK,iBAAkBF,EAAMoB,GAAoBzB,CAAQ,CACxE,CAEM,OAAO,IACb,EAEAL,EAAa,UAAU,IAAMA,EAAa,UAAU,eAEpDA,EAAa,UAAU,mBACnB,SAA4BU,EAAM,CAChC,IAAIO,EAAWL,EAAQlJ,EAGvB,GADAkJ,EAAS,KAAK,QACVA,IAAW,OACb,OAAO,KAGT,GAAIA,EAAO,iBAAmB,OAC5B,OAAI,UAAU,SAAW,GACvB,KAAK,QAAU,OAAO,OAAO,IAAI,EACjC,KAAK,aAAe,GACXA,EAAOF,CAAI,IAAM,SACtB,EAAE,KAAK,eAAiB,EAC1B,KAAK,QAAU,OAAO,OAAO,IAAI,EAEjC,OAAOE,EAAOF,CAAI,GAEf,KAIT,GAAI,UAAU,SAAW,EAAG,CAC1B,IAAIsB,EAAO,OAAO,KAAKpB,CAAM,EACzBqB,EACJ,IAAKvK,EAAI,EAAGA,EAAIsK,EAAK,OAAQ,EAAEtK,EAC7BuK,EAAMD,EAAKtK,CAAC,EACRuK,IAAQ,kBACZ,KAAK,mBAAmBA,CAAG,EAE7B,YAAK,mBAAmB,gBAAgB,EACxC,KAAK,QAAU,OAAO,OAAO,IAAI,EACjC,KAAK,aAAe,EACb,IACf,CAIM,GAFAhB,EAAYL,EAAOF,CAAI,EAEnB,OAAOO,GAAc,WACvB,KAAK,eAAeP,EAAMO,CAAS,UAC1BA,IAAc,OAEvB,IAAKvJ,EAAIuJ,EAAU,OAAS,EAAGvJ,GAAK,EAAGA,IACrC,KAAK,eAAegJ,EAAMO,EAAUvJ,CAAC,CAAC,EAI1C,OAAO,IACb,EAEA,SAASwK,EAAW1C,EAAQkB,EAAMyB,EAAQ,CACxC,IAAIvB,EAASpB,EAAO,QAEpB,GAAIoB,IAAW,OACb,MAAO,CAAA,EAET,IAAIwB,EAAaxB,EAAOF,CAAI,EAC5B,OAAI0B,IAAe,OACV,CAAA,EAEL,OAAOA,GAAe,WACjBD,EAAS,CAACC,EAAW,UAAYA,CAAU,EAAI,CAACA,CAAU,EAE5DD,EACLE,EAAgBD,CAAU,EAAIlB,EAAWkB,EAAYA,EAAW,MAAM,CAC1E,CAEApC,EAAa,UAAU,UAAY,SAAmBU,EAAM,CAC1D,OAAOwB,EAAW,KAAMxB,EAAM,EAAI,CACpC,EAEAV,EAAa,UAAU,aAAe,SAAsBU,EAAM,CAChE,OAAOwB,EAAW,KAAMxB,EAAM,EAAK,CACrC,EAEAV,EAAa,cAAgB,SAASsC,EAAS5B,EAAM,CACnD,OAAI,OAAO4B,EAAQ,eAAkB,WAC5BA,EAAQ,cAAc5B,CAAI,EAE1B6B,EAAc,KAAKD,EAAS5B,CAAI,CAE3C,EAEAV,EAAa,UAAU,cAAgBuC,EACvC,SAASA,EAAc7B,EAAM,CAC3B,IAAIE,EAAS,KAAK,QAElB,GAAIA,IAAW,OAAW,CACxB,IAAIwB,EAAaxB,EAAOF,CAAI,EAE5B,GAAI,OAAO0B,GAAe,WACxB,MAAO,GACF,GAAIA,IAAe,OACxB,OAAOA,EAAW,MAExB,CAEE,MAAO,EACT,CAEApC,EAAa,UAAU,WAAa,UAAsB,CACxD,OAAO,KAAK,aAAe,EAAIL,EAAe,KAAK,OAAO,EAAI,CAAA,CAChE,EAEA,SAASuB,EAAWsB,EAAKjC,EAAG,CAE1B,QADIkC,EAAO,IAAI,MAAMlC,CAAC,EACb7I,EAAI,EAAGA,EAAI6I,EAAG,EAAE7I,EACvB+K,EAAK/K,CAAC,EAAI8K,EAAI9K,CAAC,EACjB,OAAO+K,CACT,CAEA,SAASV,EAAUH,EAAMhI,EAAO,CAC9B,KAAOA,EAAQ,EAAIgI,EAAK,OAAQhI,IAC9BgI,EAAKhI,CAAK,EAAIgI,EAAKhI,EAAQ,CAAC,EAC9BgI,EAAK,IAAG,CACV,CAEA,SAASS,EAAgBG,EAAK,CAE5B,QADIE,EAAM,IAAI,MAAMF,EAAI,MAAM,EACrB9K,EAAI,EAAGA,EAAIgL,EAAI,OAAQ,EAAEhL,EAChCgL,EAAIhL,CAAC,EAAI8K,EAAI9K,CAAC,EAAE,UAAY8K,EAAI9K,CAAC,EAEnC,OAAOgL,CACT,CAEA,SAASxC,EAAKoC,EAASK,EAAM,CAC3B,OAAO,IAAI,QAAQ,SAAUC,EAASC,EAAQ,CAC5C,SAASC,EAAchC,EAAK,CAC1BwB,EAAQ,eAAeK,EAAMI,CAAQ,EACrCF,EAAO/B,CAAG,CAChB,CAEI,SAASiC,GAAW,CACd,OAAOT,EAAQ,gBAAmB,YACpCA,EAAQ,eAAe,QAASQ,CAAa,EAE/CF,EAAQ,CAAA,EAAG,MAAM,KAAK,SAAS,CAAC,CACtC,CAEII,EAA+BV,EAASK,EAAMI,EAAU,CAAE,KAAM,GAAM,EAClEJ,IAAS,SACXM,EAA8BX,EAASQ,EAAe,CAAE,KAAM,EAAI,CAAE,CAE1E,CAAG,CACH,CAEA,SAASG,EAA8BX,EAASvB,EAASmC,EAAO,CAC1D,OAAOZ,EAAQ,IAAO,YACxBU,EAA+BV,EAAS,QAASvB,EAASmC,CAAK,CAEnE,CAEA,SAASF,EAA+BV,EAASK,EAAMtC,EAAU6C,EAAO,CACtE,GAAI,OAAOZ,EAAQ,IAAO,WACpBY,EAAM,KACRZ,EAAQ,KAAKK,EAAMtC,CAAQ,EAE3BiC,EAAQ,GAAGK,EAAMtC,CAAQ,UAElB,OAAOiC,EAAQ,kBAAqB,WAG7CA,EAAQ,iBAAiBK,EAAM,SAASQ,EAAa7C,EAAK,CAGpD4C,EAAM,MACRZ,EAAQ,oBAAoBK,EAAMQ,CAAY,EAEhD9C,EAASC,CAAG,CAClB,CAAK,MAED,OAAM,IAAI,UAAU,sEAAwE,OAAOgC,CAAO,CAE9G,8BC5eA,MAAMc,EAAa,IAAI,MAAM,0BAA0B,EACjD3J,EAAa,IAAI,MAAM,0BAA0B,EACvD2J,EAAW,QAAU,OACrB3J,EAAW,QAAU,OAGrB,IAAI4J,EAAoB,GACxB,OAAO,iBAAiB,QAAS,IAAM,CACnCA,EAAoB,EACxB,EAAG,CAAE,KAAM,EAAI,CAAE,EAGjB,MAAMC,GAAO,CAACC,EAAGC,EAAGjD,KAAO,EAAIA,GAAKgD,EAAIhD,EAAIiD,EACtCC,GAAe1J,IAAO,CAAE,EAAGA,EAAE,QAAS,EAAGA,EAAE,OAAO,GAClD2J,GAAW,CAACC,EAAIC,EAAIC,EAAIC,IAAO,KAAK,KAAK,KAAK,IAAID,EAAKF,EAAI,CAAC,EAAI,KAAK,IAAIG,EAAKF,EAAI,CAAC,CAAC,EAG1F,IAAIG,EAAW,CAAE,EAAG,EAAG,EAAG,CAAC,EAC3B,OAAO,iBAAiB,YAAcC,GAAO,CACzCD,EAAWN,GAAYO,CAAE,CAC7B,CAAC,EAGD,MAAMC,WAAmBjE,GAAAA,YAAa,CAClC,YAAYkE,EAAI,CACZ,QACA,KAAK,IAAM,CAAE,GAAIA,CAAE,EACnB,KAAK,IAAI,KAAO,KAAK,IAAI,GAAG,cAAc,eAAe,EACzD,KAAK,IAAI,UAAY,KAAK,IAAI,GAAG,cAAc,qBAAqB,EACpE,KAAK,IAAI,QAAU,KAAK,IAAI,GAAG,cAAc,kBAAkB,EAC/D,KAAK,IAAI,WAAa,KAAK,IAAI,GAAG,cAAc,kBAAkB,EAGlE,KAAK,eAAiB,CAClB,GAAI,CAAE,SAAU,EAAG,QAAS,EAAG,IAAK,EAAG,EACvC,GAAI,CAAE,SAAU,EAAG,QAAS,EAAG,IAAK,EAAG,EACvC,IAAK,CAAE,SAAU,EAAG,QAAS,EAAG,IAAK,GAAI,EACzC,IAAK,CAAE,SAAU,EAAG,QAAS,EAAG,IAAK,GAAI,CACrD,EACQ,KAAK,MAAQ,CAAE,MAAO,EAAK,EAG3B,KAAK,sBAAqB,EAG1B,KAAK,WAAU,EAGf,sBAAsB,IAAM,KAAK,OAAM,CAAE,CAC7C,CAGA,uBAAwB,CACpB,KAAK,KAAO,KAAK,IAAI,GAAG,sBAAqB,EAC7C,KAAK,kBAAoB,KAAK,KAAK,MAAQ,GAC/C,CAGA,YAAa,CAET,KAAK,SAAW,IAAM,KAAK,sBAAqB,EAChD,OAAO,iBAAiB,SAAU,KAAK,QAAQ,EAG/C,KAAK,IAAI,GAAG,iBAAiB,aAAc,IAAM,CACzCb,IACAD,EAAW,YAAc,EACzBA,EAAW,OAAO,MAAM,GAAK,QAAQ,IAAI,qBAAsB,CAAC,CAAC,GAErE,KAAK,MAAK,CACd,CAAC,EAED,KAAK,IAAI,GAAG,iBAAiB,aAAc,IAAM,CACzCC,IACAD,EAAW,YAAc,EACzBA,EAAW,OAAO,MAAM,GAAK,QAAQ,IAAI,qBAAsB,CAAC,CAAC,GAErE,KAAK,MAAK,CACd,CAAC,EAED,KAAK,IAAI,GAAG,iBAAiB,QAAS,IAAM,CACpCC,IACA5J,EAAW,YAAc,EACzBA,EAAW,OAAO,MAAM,GAAK,QAAQ,IAAI,qBAAsB,CAAC,CAAC,EAEzE,CAAC,CACL,CAGA,QAAS,CACL,MAAM0K,EAAsBT,GACxBK,EAAS,EAAI,OAAO,QACpBA,EAAS,EAAI,OAAO,QACpB,KAAK,KAAK,KAAO,KAAK,KAAK,MAAQ,EACnC,KAAK,KAAK,IAAM,KAAK,KAAK,OAAS,CAC/C,EAEQ,IAAIK,EAAI,EACJC,EAAI,EAEJF,EAAsB,KAAK,mBACtB,KAAK,MAAM,OAAO,KAAK,MAAK,EACjCC,GAAKL,EAAS,EAAI,OAAO,SAAW,KAAK,KAAK,KAAO,KAAK,KAAK,MAAQ,IAAM,GAC7EM,GAAKN,EAAS,EAAI,OAAO,SAAW,KAAK,KAAK,IAAM,KAAK,KAAK,OAAS,IAAM,IACtE,KAAK,MAAM,OAClB,KAAK,MAAK,EAGd,KAAK,eAAe,GAAM,QAAU,KAAK,eAAe,IAAO,QAAUK,EACzE,KAAK,eAAe,GAAM,QAAU,KAAK,eAAe,IAAO,QAAUC,EAEzE,UAAWpC,KAAO,KAAK,eACnB,KAAK,eAAeA,CAAG,EAAE,SAAWqB,GAChC,KAAK,eAAerB,CAAG,EAAE,SACzB,KAAK,eAAeA,CAAG,EAAE,QACzB,KAAK,eAAeA,CAAG,EAAE,GACzC,EAIQpI,EAAK,IAAI,KAAK,IAAI,QAAS,CACvB,EAAG,KAAK,eAAe,GAAM,SAC7B,EAAG,KAAK,eAAe,GAAM,QACzC,CAAS,EAEDA,EAAK,IAAI,KAAK,IAAI,WAAY,CAC1B,EAAG,KAAK,eAAe,IAAO,SAC9B,EAAG,KAAK,eAAe,IAAO,QAC1C,CAAS,EAEDA,EAAK,IAAI,KAAK,IAAI,KAAM,CACpB,EAAG,KAAK,eAAe,GAAM,SAAW,GACxC,EAAG,KAAK,eAAe,GAAM,SAAW,EACpD,CAAS,EAED,sBAAsB,IAAM,KAAK,OAAM,CAAE,CAC7C,CAGA,OAAQ,CACJ,KAAK,KAAK,OAAO,EACjB,KAAK,MAAM,MAAQ,GACnB,KAAK,IAAI,GAAG,UAAU,IAAI,eAAe,EACzC,SAAS,KAAK,UAAU,IAAI,QAAQ,EAEpCA,EAAK,aAAa,SAAS,IAAI,EAC/BA,EAAK,aAAa,KAAK,IAAI,SAAS,EAEpCA,EAAK,SAAQ,EACR,GAAG,SAAS,KAAM,GAAK,CAAE,gBAAiB,OAAQ,EAClD,GAAG,KAAK,IAAI,UAAW,GAAK,CACzB,KAAM,iBACN,QAAS,EACT,EAAG,MACnB,EAAe,CAAC,EACH,GAAG,KAAK,IAAI,UAAW,GAAK,CACzB,KAAM,eACN,QAAS,EACT,QAAS,CAAE,EAAG,KAAK,EACnB,EAAG,IACnB,CAAa,CACT,CAGA,OAAQ,CACJ,KAAK,KAAK,OAAO,EACjB,KAAK,MAAM,MAAQ,GACnB,KAAK,IAAI,GAAG,UAAU,OAAO,eAAe,EAC5C,SAAS,KAAK,UAAU,OAAO,QAAQ,EAEvCA,EAAK,aAAa,SAAS,IAAI,EAC/BA,EAAK,aAAa,KAAK,IAAI,SAAS,EAEpCA,EAAK,SAAQ,EACR,GAAG,SAAS,KAAM,GAAK,CAAE,gBAAiB,OAAQ,EAClD,GAAG,KAAK,IAAI,UAAW,GAAK,CACzB,KAAM,iBACN,QAAS,EACT,EAAG,KACnB,EAAe,CAAC,EACH,GAAG,KAAK,IAAI,UAAW,GAAK,CACzB,KAAM,eACN,QAAS,EACT,QAAS,CAAE,EAAG,MAAM,EACpB,EAAG,IACnB,CAAa,CACT,CAGA,SAAU,CACN,OAAO,oBAAoB,SAAU,KAAK,QAAQ,CACtD,CACJ,CAGe,IAAIoK,GAAW,SAAS,eAAe,OAAO,CAAC","x_google_ignoreList":[22]}